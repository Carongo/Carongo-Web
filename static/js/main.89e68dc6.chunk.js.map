{"version":3,"sources":["pages/login/image/imglog.png","assets/img/Carrousel1.png","assets/img/Carrousel2.png","assets/img/eurekinha.png","pages/perfil/image/imglog.png","serviceWorker.js","components/menu/index.jsx","components/rodape/index.jsx","pages/login/index.jsx","pages/cadastro/index.jsx","pages/home/index.js","utils/constants.js","pages/detalhes-da-instituicao/detalhes-da-instituicao.js","pages/pessoas-da-instituicao/pessoas-da-instituicao.js","pages/esqueciasenha/index.jsx","pages/perfil/index.jsx","index.js","components/menu/image/logo.jpeg"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Menu","useHistory","token","localStorage","getItem","Navbar","collapseOnSelect","expand","bg","variant","href","alt","src","logo","style","width","Toggle","aria-controls","Collapse","id","Nav","className","Link","jwt_decode","role","Brand","NavDropdown","title","Item","Divider","eventKey","renderMenu","Rodape","backgroundColor","Col","sm","Login","history","useState","email","setEmail","senha","setSenha","Container","Jumbotron","Form","Group","controlId","Label","Control","value","onChange","event","target","type","placeholder","Button","marginTop","onClick","preventDefault","fetch","method","body","JSON","stringify","headers","response","ok","json","alert","dados","setItem","usuario","push","err","logar","Cadastro","nome","setNome","methot","data","Cadastrar","Home","Carousel","fluid","carousel1","carousel2","Row","eurekinha","display","margin","url","storage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","responsive","desktop","breakpoint","max","min","items","laptop","tabletS","tabletM","tabletL","mobileS","mobileM","mobileL","Aluno","idAluno","nomeAluno","dataNascimento","urlFoto","cpf","tipo","listar","addToast","useToasts","showModalAlterarAluno","setShowModalAlterarAluno","aluno","setAluno","handleCloseModalAlterarAluno","idAlunoAlterar","setIdAlunoAlterar","buscar","resultado","deletarAluno","a","mensagem","appearance","autoDismiss","ModalAlterarAluno","formikAlterarAluno","useFormik","initialValues","Nome","Email","DataNascimento","CPF","onSubmit","values","sucesso","resetForm","validationSchema","Yup","shape","required","Modal","show","onHide","Header","closeButton","Title","Body","Card","height","backgroundImage","boxShadow","backgroundSize","backgroundPosition","justifyContent","FormFile","htmlFor","color","cursor","File","label","custom","accept","image","files","nomeImg","criarGuid","ref","put","getDownloadURL","setFieldValue","uploadImgAluno","handleSubmit","name","handleChange","errors","touched","Footer","disabled","isSubmitting","Spinner","animation","size","Img","Text","Turma","idTurma","nomeTurma","alunos","showModalAluno","setShowModalAluno","handleCloseModalAluno","idTurmaAddAluno","setIdTurmaAddLuno","showModalAlterarTurma","setShowModalAlterarTurma","turma","setTurma","handleCloseModalAlterarTurma","idTurmaAlterar","setIdTurmaAlterar","deletarTurma","confirm","ModalAluno","formikAluno","ModalAlterarTurma","formikAlterarTurma","alignItems","marginRight","undefined","length","minimumTouchDrag","draggable","removeArrowOnDeviceType","map","index","key","replace","c","crypto","getRandomValues","Uint8Array","toString","DetalhesDaInstituicao","idInstituicao","useParams","turmas","setTurmas","urlImagemFiltro","setUrlImagemFiltro","showModalCriarTurma","setShowModalCriarTurma","handleCloseModalCriarTurma","ModalCriarTurma","formikCriarTurma","useEffect","filtrarPorImagem","replaceAll","sairDaInstituicao","deletarInstituicao","formikFiltroPorNome","textAlign","Dropdown","fontSize","xs","InputGroup","FormControl","Prepend","upload","Pessoa","ListGroup","PessoasDaInstituicao","pessoas","setPessoas","colaboradores","administradores","administrador","EsqueciaSenha","Recuperar","Perfil","imglog","RotaPrivadaLogado","Component","component","rest","render","props","to","pathname","from","RotaPrivadaNaoLogado","routing","basename","process","exact","path","ReactDOM","document","getElementById","URL","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.89e68dc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imglog.bb9ee605.png\";","module.exports = __webpack_public_path__ + \"static/media/Carrousel1.e2b1d1f2.png\";","module.exports = __webpack_public_path__ + \"static/media/Carrousel2.f18072f1.png\";","module.exports = __webpack_public_path__ + \"static/media/eurekinha.bd8d39ef.png\";","module.exports = __webpack_public_path__ + \"static/media/imglog.bb9ee605.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from \"react\";\r\nimport{Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport logo from './image/logo.jpeg'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport './index.css'\r\n\r\n\r\nconst Menu=()=> {\r\n    const history = useHistory();\r\n    const Sair =(event)=>{\r\n        event.preventDefault();\r\n        //remove token para sair do login/sessão\r\n        localStorage.removeItem('token-carango');\r\n\r\n        history.pushState('/')\r\n    }\r\n\r\n    const renderMenu = () =>{\r\n        const token = localStorage.getItem('token-carango');\r\n        //se não estiver logado\r\n        if(token === null){\r\n            return(\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                  <a href=\"/\"><img  alt=\"Carongo\" src={logo} style={{ width : '175px'}} /></a>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/login\">Login</Nav.Link>\r\n                    <Nav.Link href=\"/cadastro\">Cadastre-se</Nav.Link>\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n\r\n            );\r\n            //mudança... // se estiver logado e for admin\r\n        }else if(jwt_decode(token).role === 'admin'){\r\n            return(\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/pages/home\">Carongo</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/pages/login\">Login</Nav.Link>\r\n                    <Nav.Link href=\"/pages/cadastro\">Cadastre-se</Nav.Link>\r\n                    <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                      <NavDropdown.Item href=\"/sair\">sair</NavDropdown.Item>\r\n                      <NavDropdown.Item href=\"perfil\">Perfil</NavDropdown.Item>\r\n                      <NavDropdown.Item href=\"turmas\">Turmas</NavDropdown.Item>\r\n                      <NavDropdown.Divider />\r\n                      <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  </Nav>\r\n                  <Nav>\r\n                    <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n                    <Nav.Link eventKey={2} href=\"#memes\">\r\n                      Dank memes\r\n                    </Nav.Link>\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n                \r\n            )\r\n        }else {\r\n            //se estiver logado e não for nada\r\n            return(\r\n              <div>\r\n  <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand href=\"/pages/home\">Carongo</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/pages/login\">Login</Nav.Link>\r\n        <Nav.Link href=\"/pages/cadastro\">Cadastre-se</Nav.Link>\r\n        <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n        </NavDropdown>\r\n    </Nav>\r\n    <Nav>\r\n      <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n      <Nav.Link eventKey={2} href=\"#memes\">\r\n        Dank memes\r\n      </Nav.Link>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n              </div>\r\n               \r\n            )\r\n\r\n        }\r\n      \r\n\r\n    }\r\n        return (\r\n         <div>\r\n \r\n    {renderMenu()}\r\n  \r\n\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default Menu;","//Suponha que seu site tenha 10 páginas com o mesmo rodapé em todos eles. Se um dia você quiser mudar o rodapé do site, você terá que mudar em todas as 10 páginas. Pra isso serve os components, para facilitar.\r\n\r\n//Importa React de react.\r\nimport React from \"react\";\r\n//Importa o css específico do index. O Global está em App.css\r\nimport \"./index.css\";\r\n\r\nimport logo from '../menu/image/logo.jpeg'\r\n\r\n\r\nimport {Col, Row, Container} from 'react-bootstrap';\r\n\r\nconst Rodape =()=>{\r\n    return(\r\n        <div style={{backgroundColor : '#343A40'}}>\r\n            <container className='rodape' >\r\n                <div>\r\n               <a href=\"/\"> <Col sm={8}><img alt=\"Carongo\" src={logo} style={{ width : '175px'}} /></Col></a>\r\n                </div>\r\n            </container>\r\n            <div className='text-center'>\r\n                <h2>Senai de Informatica - 2021</h2>\r\n            </div>\r\n   \r\n    \r\n    \r\n  \r\n    \r\n \r\n    \r\n     \r\n  \r\n \r\n\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rodape;","import React, { useState } from 'react';\r\nimport './index.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport imglog from './image/imglog.png'\r\n\r\n\r\n\r\nimport Menu from '../../components/menu';\r\nimport Rodape from '../../components/rodape';\r\nimport { Form, Button, InputGroup, FormControl, Container, Jumbotron } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Login =() =>{\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    \r\n    const logar=(event)=>{\r\n        event.preventDefault();\r\n        console.log(email + senha);\r\n\r\n        fetch('http://localhost:5000/conta/entrar',{\r\n            method : 'POST',\r\n            body : JSON.stringify({\r\n                email : email,\r\n                senha : senha\r\n            }),\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }\r\n        })\r\n        .then(response => {\r\n           if(response.ok){\r\n               return response.json();\r\n           }\r\n           alert('dados invalidos');\r\n        })\r\n        .then(dados => {\r\n            //salva o token no localstorage\r\n            localStorage.setItem('token-carongo', dados.dados);\r\n            //decodifica o Data.token\r\n            let usuario = jwt_decode(dados.token)\r\n            console.log(usuario)\r\n            //redireciona para a ..... apos o login\r\n            history.push('/....')\r\n            \r\n        })\r\n        .catch(err => console.error(err));\r\n\r\n\r\n    }\r\n\r\n    return(\r\n            \r\n    <div>\r\n        <Menu />\r\n        <Container className=\"container\">\r\n       \r\n      <Jumbotron  className='jumb'>\r\n        <div className='text-center' >\r\n        <h1 className=\"text-center\">\r\n          Login\r\n        </h1>\r\n       \r\n        </div>\r\n      <Form >\r\n\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n      <Form.Label>Email</Form.Label>\r\n      <Form.Control value={email} onChange={event=> setEmail(event.target.value)} type=\"email\" placeholder=\"Digite seu email\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n      <Form.Label>Senha</Form.Label>\r\n      <Form.Control value={senha} onChange={event=> setSenha(event.target.value)} type=\"password\" placeholder=\"Digite sua senha\" />\r\n      </Form.Group>\r\n\r\n      <div className=\"options\" >\r\n          <a href=\"/pages/cadastro\">Cadastre-se</a>\r\n          <a href=\"/pages/esqueciasenha\">Esqueci minha senha</a>\r\n      </div>\r\n\r\n      <Button style={{marginTop : '18px'}} onClick={event => logar(event)}  className='button' variant=\"dark\" type=\"submit\">\r\n      Entrar\r\n      </Button>\r\n      </Form>\r\n\r\n      </Jumbotron>\r\n\r\n\r\n\r\n      </Container>\r\n     \r\n       \r\n\r\n        \r\n        \r\n\r\n       \r\n     <Rodape />\r\n\r\n    </div>\r\n\r\n    );\r\n    \r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport{ Jumbotron, Container, Form, Button, } from 'react-bootstrap';\r\nimport Menu from '../../components/menu';\r\nimport Rodape from '../../components/rodape';\r\nimport imglog from '../login/image/imglog.png';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Cadastro =()=>{\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const [nome, setNome] = useState('');\r\n\r\n  const Cadastrar =(event)=>{\r\n\r\n    event.preventDefault();\r\n    console.log(nome + email + senha);\r\n\r\n    fetch('http://localhost:500/conta/cadastrar-se',{\r\n        methot : 'POST',\r\n        body : JSON.stringify({\r\n            email : email,\r\n            senha : senha,\r\n            nome : nome \r\n        }),\r\n        headers : {\r\n            'context-type' : 'application/json'\r\n        }\r\n    })\r\n    .then(response => {\r\n       if(response.ok){\r\n           return response.json();\r\n       }\r\n       alert('dados invalidos');\r\n    })\r\n    .then(data => {\r\n        //salva o token no localstorage\r\n        localStorage.setItem('token-carango', data.token);\r\n        //decodifica o Data.token\r\n        let usuario = jwt_decode(data.token)\r\n        console.log(usuario)\r\n        //redireciona para a ..... apos o login\r\n        history.push('/....')\r\n        \r\n    })\r\n    .catch(err => console.error(err));\r\n\r\n\r\n}\r\n    return(\r\n\r\n        <div>\r\n            <Menu />\r\n            <Container className=\"container\">\r\n\r\n                <Jumbotron  className='jumb'>\r\n\r\n            <div className='text-center' >\r\n                <h1>\r\n                    Cadastro\r\n                </h1>\r\n           </div>\r\n\r\n       <Form >\r\n                               \r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Nome</Form.Label>\r\n              <Form.Control value={nome} onChange={event=> setNome(event.target.value)} type=\"name\" placeholder=\"Digite seu nome\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control value={email} onChange={event=> setEmail(event.target.value)}  type=\"email\" placeholder=\"Digite seu email\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Senha</Form.Label>\r\n              <Form.Control value={senha} onChange={event=> setSenha(event.target.value)} type=\"password\" placeholder=\"Digite sua senha\" />\r\n            </Form.Group>\r\n            \r\n            <Button  onClick={event => Cadastrar(event)} className='button' variant=\"dark\" type=\"submit\">\r\n              Cadastrar\r\n            </Button>\r\n\r\n  \r\n        </Form>\r\n\r\n                </Jumbotron>\r\n\r\n\r\n            </Container>\r\n            <Rodape />\r\n\r\n        </div>\r\n    )\r\n}\r\n \r\n\r\nexport default Cadastro;","import React from 'react';\r\nimport { Carousel, Container, Row, Col} from 'react-bootstrap';\r\nimport './index.css'\r\n\r\nimport Menu from \"../../components/menu/index\";\r\nimport Rodape from \"../../components/rodape/index\";\r\n\r\nimport carousel1 from '../../assets/img/Carrousel1.png'\r\nimport carousel2 from \"../../assets/img/Carrousel2.png\";\r\nimport eurekinha from \"../../assets/img/eurekinha.png\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n          <Menu/>\r\n          <Carousel fluid>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src={carousel1}\r\n      alt=\"First slide\"\r\n    />\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src={carousel2}\r\n      alt=\"Second slide\"\r\n    />\r\n\r\n  </Carousel.Item>\r\n\r\n</Carousel>\r\n<div className=\"container\">\r\n  \r\n\r\n\r\n\r\n\r\n<Container>\r\n  <Row>\r\n    <Col sm={15}><h1>Quem somos?</h1><p>Fazemos conexões, mas acima de tudo, somos a conexão. Somos o elo entre o que você vê por aí e o que você quer enxergar daqui para frente. A ponte entre a sua rotina e as suas ideias. Unimos a experiência profissional e a formação, a especialização e a vivência. Somos o que você lê para se inspirar, todas as regras e as mudanças. Somos a informação que move você, o mercado e o mundo. O conteúdo que comunica, explica e emociona. Somos completos. E completamos. Somos o que faz o mercado pulsar. A inteligência que traz a inovação do amanhã. Fazemos você e os resultados da sua marca crescerem. Juntos. Somos a paixão que faz você manter o brilho nos olhos a cada novo job. Somos o orgulho de ser, somos uma nação. Mais que um lugar qualquer, somos um mundo. O mundo por trás do marketing. Somos Mundo do Marketing. Você conectado com o mercado.</p></Col>\r\n \r\n\r\n\r\n    <Col><img src={eurekinha} style={{display: \"block\", margin: \"auto\"}}></img></Col>\r\n  </Row>\r\n  \r\n</Container>\r\n\r\n\r\n</div>\r\n          <Rodape/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Home;","export const url = \"http://localhost:5000\";","import React, {useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport{ Container, Card, Dropdown, Col, Form, InputGroup, FormControl, FormFile, Spinner, Button, Modal } from 'react-bootstrap';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport {url} from \"../../utils/constants\";\r\nimport {useFormik} from \"formik\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\nimport firebase from \"firebase\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport \"./index.css\";\r\nimport Menu from '../../components/menu';\r\nimport Rodape from '../../components/rodape';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDP-Kaj-XntRALyVe4hslPw_a6uoPzTsCo\",\r\n    authDomain: \"carongo-api.firebaseapp.com\",\r\n    projectId: \"carongo-api\",\r\n    storageBucket: \"carongo-api.appspot.com\",\r\n    messagingSenderId: \"316864397132\",\r\n    appId: \"1:316864397132:web:ff1b376c1b87b421ead9e9\",\r\n    measurementId: \"G-XPSC8L642V\"\r\n  };\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst storage = app.storage();\r\n\r\nconst responsive = {\r\n    desktop: {\r\n        breakpoint: {\r\n            max: 3000,\r\n            min: 1025\r\n        },\r\n        items: 3.3\r\n    },\r\n    laptop: {\r\n        breakpoint: {\r\n            max: 1024,\r\n            min: 769\r\n        },\r\n        items: 2.5\r\n    },\r\n    tabletS: {\r\n        breakpoint: {\r\n            max: 500,\r\n            min: 426\r\n        },\r\n        items: 1.4\r\n    },\r\n    tabletM: {\r\n        breakpoint: {\r\n            max: 650,\r\n            min: 501\r\n        },\r\n        items: 1.75\r\n    },\r\n    tabletL: {\r\n        breakpoint: {\r\n            max: 768,\r\n            min: 651\r\n        },\r\n        items: 2\r\n    },\r\n    mobileS: {\r\n        breakpoint: {\r\n            max: 320,\r\n            min: 0\r\n        },\r\n        items: 1\r\n    },\r\n    mobileM: {\r\n        breakpoint: {\r\n            max: 375,\r\n            min: 321\r\n        },\r\n        items: 1\r\n    },\r\n    mobileL: {\r\n        breakpoint: {\r\n            max: 425,\r\n            min: 376\r\n        },\r\n        items: 1.25\r\n    }\r\n}\r\n\r\nconst Aluno = ({idAluno, nomeAluno, email, dataNascimento, urlFoto, cpf, tipo, listar}) => {\r\n    const {addToast} = useToasts();\r\n    const [showModalAlterarAluno, setShowModalAlterarAluno] = useState(false);\r\n    const [aluno, setAluno] = useState({});\r\n    const handleCloseModalAlterarAluno = () => setShowModalAlterarAluno(false);\r\n    const [idAlunoAlterar, setIdAlunoAlterar] = useState(\"\");\r\n    const handleShowModalAlterarAluno = (id) => {\r\n        setIdAlunoAlterar(id);\r\n        buscar(id)\r\n        setShowModalAlterarAluno(true);\r\n    };\r\n\r\n    const buscar = (id) => {\r\n        fetch(`${url}/aluno/detalhes/${id}`, {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        })\r\n        .then(resultado => resultado.json())\r\n        .then(dados => {\r\n            setAluno(dados.dados);\r\n        })\r\n    } \r\n\r\n    const deletarAluno = async (id) => {\r\n        const response = await fetch(`${url}/aluno/deletar-aluno`, {\r\n            method: \"DELETE\",\r\n            body: JSON.stringify({\r\n                idAluno : id\r\n            }),\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        addToast(data.mensagem, {appearance: \"success\", autoDismiss: true});\r\n        listar();\r\n    }\r\n\r\n    const ModalAlterarAluno = () => {\r\n        const uploadImgAluno = (event) => {\r\n            event.preventDefault();\r\n    \r\n            let image = event.target.files[0];\r\n    \r\n            let nomeImg = criarGuid();\r\n    \r\n            storage.ref(nomeImg).put(image).then(async () => {\r\n                let a = await storage.ref(nomeImg).getDownloadURL();\r\n                formikAlterarAluno.setFieldValue(\"urlFoto\", a);\r\n            });\r\n        }\r\n\r\n        const formikAlterarAluno = useFormik({\r\n            initialValues : {\r\n                Nome : aluno.nome,\r\n                Email : aluno.email,\r\n                DataNascimento: aluno.dataNascimento,\r\n                CPF: aluno.cpf,\r\n                urlFoto: aluno.urlFoto,\r\n                idAluno: idAlunoAlterar\r\n            },\r\n            onSubmit : values => {\r\n                fetch(`${url}/aluno/alterar-aluno`, {\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                        \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                    }\r\n                })\r\n                .then(resultado => resultado.json())\r\n                .then(dados => {\r\n                    console.log(dados)\r\n                    if(dados.sucesso){\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'success',\r\n                            autoDismiss : true\r\n                        });\r\n    \r\n                        formikAlterarAluno.resetForm();\r\n    \r\n                        listar();\r\n                    } \r\n                    else {\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'error',\r\n                            autoDismiss : true\r\n                        })\r\n                    }\r\n                    setShowModalAlterarAluno(false);\r\n                })\r\n            },\r\n            validationSchema : Yup.object().shape({\r\n                Nome: Yup.string()         \r\n                  .min(2, 'O nome deve ter no minimo 3 caracteres')\r\n                  .max(41, 'O nome deve ter no máximo 40 caracteres')\r\n                  .required('Informe um nome'),\r\n                Email: Yup.string()\r\n                  .required('Informe um email'),\r\n                DataNascimento: Yup.string()\r\n                  .required('Informe a data de nascimento'),\r\n                CPF: Yup.string()\r\n                  .required('Informe o CPF'),\r\n            })\r\n        })\r\n\r\n        return (\r\n            <Modal show={showModalAlterarAluno} onHide={handleCloseModalAlterarAluno}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Alterar aluno</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {formikAlterarAluno.values.urlFoto &&<div style={{width: \"150px\", height: \"150px\", backgroundImage: `url(${formikAlterarAluno.values.urlFoto})`, margin: \"auto\", boxShadow: \"inset 2px 2px 5px black, 2px 2px 2px black\", backgroundSize: \"cover\", backgroundPosition: \"50% 50%\"}}></div>}\r\n                            <Form style={{margin: \"20px\", display: \"flex\", justifyContent: \"center\"}}>\r\n                                <FormFile>\r\n                                    <Form.Label htmlFor=\"Aluno\"><p style={{color: \"#0069D9\", cursor: \"pointer\"}}><i className=\"far fa-image\"></i>{ formikAlterarAluno.values.urlFoto === \"\" ? \" Selecionar imagem\": \" Trocar imagem\"}</p></Form.Label>\r\n                                    <Form.File\r\n                                        id=\"Aluno\"\r\n                                        label=\"Imagem do aluno\"\r\n                                        custom\r\n                                        accept=\"image/*\"\r\n                                        style={{display: \"none\"}}\r\n                                        onChange={event => uploadImgAluno(event)}\r\n                                    />\r\n                                </FormFile>\r\n                            </Form>\r\n                            <Form onSubmit={formikAlterarAluno.handleSubmit}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Nome</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        name=\"Nome\" \r\n                                        placeholder=\"Nome\"  \r\n                                        value={formikAlterarAluno.values.Nome} \r\n                                        onChange={formikAlterarAluno.handleChange}\r\n                                        required />\r\n                                        {formikAlterarAluno.errors.Nome && formikAlterarAluno.touched.Nome ? (<div className=\"error\">{formikAlterarAluno.errors.Nome}</div>) : null }\r\n                                </Form.Group>\r\n                                                            \r\n                                <Form.Group>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"Email\"\r\n                                        placeholder=\"Email\" \r\n                                        value={formikAlterarAluno.values.Email} \r\n                                        onChange={formikAlterarAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAlterarAluno.errors.Email && formikAlterarAluno.touched.Email ? (<div className=\"error\">{formikAlterarAluno.errors.Email}</div>) : null }\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Data de Nascimento</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"DataNascimento\"\r\n                                        placeholder=\"Data de nascimento\" \r\n                                        value={formikAlterarAluno.values.DataNascimento} \r\n                                        onChange={formikAlterarAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAlterarAluno.errors.DataNascimento && formikAlterarAluno.touched.DataNascimento ? (<div className=\"error\">{formikAlterarAluno.errors.DataNascimento}</div>) : null }\r\n                                </Form.Group>\r\n                                \r\n                                <Form.Group>\r\n                                    <Form.Label>CPF</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"CPF\"\r\n                                        placeholder=\"CPF\" \r\n                                        value={formikAlterarAluno.values.CPF} \r\n                                        onChange={formikAlterarAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAlterarAluno.errors.CPF && formikAlterarAluno.touched.CPF ? (<div className=\"error\">{formikAlterarAluno.errors.CPF}</div>) : null }\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"light\" onClick={handleCloseModalAlterarAluno}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={formikAlterarAluno.handleSubmit} variant=\"dark\" disabled={formikAlterarAluno.isSubmitting}>{formikAlterarAluno.isSubmitting ? <Spinner animation=\"border\" size=\"sm\" /> : null } Salvar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '14rem', margin: \"auto\" }}>\r\n            <Card.Img variant=\"top\" src={urlFoto} />\r\n            <Card.Body>\r\n                <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                    <Card.Title>{nomeAluno}</Card.Title>\r\n                    {\r\n                        tipo === 1 ?\r\n                        <div>\r\n                            <ModalAlterarAluno/>\r\n                            <i className=\"fas fa-pencil-alt\" style={{color: \"#0069D9\", cursor: \"pointer\"}} onClick={() => handleShowModalAlterarAluno(idAluno)}></i> <i className=\"fas fa-trash-alt\" style={{color: \"red\", cursor: \"pointer\"}} onClick={() => deletarAluno(idAluno)}></i>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <hr></hr>\r\n                <Card.Text>{email}</Card.Text>\r\n                <Card.Text>{dataNascimento}</Card.Text>\r\n                <Card.Text>{cpf}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst Turma = ({idTurma, nomeTurma, alunos, tipo, listar}) => {\r\n    const {addToast} = useToasts();\r\n    const [showModalAluno, setShowModalAluno] = useState(false);\r\n    const handleCloseModalAluno = () => setShowModalAluno(false);\r\n    const [idTurmaAddAluno, setIdTurmaAddLuno] = useState(\"\");\r\n    const handleShowModalAluno = (id) => {\r\n        setShowModalAluno(true);\r\n        setIdTurmaAddLuno(id);\r\n    };\r\n\r\n    const [showModalAlterarTurma, setShowModalAlterarTurma] = useState(false);\r\n    const [turma, setTurma] = useState({});\r\n    const handleCloseModalAlterarTurma = () => setShowModalAlterarTurma(false);\r\n    const [idTurmaAlterar, setIdTurmaAlterar] = useState(\"\");\r\n    const handleShowModalAlterarTurma = (id) => {\r\n        setIdTurmaAlterar(id);\r\n        buscar(id)\r\n        setShowModalAlterarTurma(true);\r\n    };\r\n\r\n    const deletarTurma = async (id) => {\r\n        let resposta = window.confirm(\"Tem certeza de que deseja excluir essa turma? Todos os alunos também serão excluídos!\")\r\n        if(resposta) {\r\n            const response = await fetch(`${url}/turma/deletar-turma`, {\r\n                method: \"DELETE\",\r\n                body: JSON.stringify({\r\n                    idTurma : id\r\n                }),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            addToast(data.mensagem, {appearance: \"success\", autoDismiss: true});\r\n            listar();\r\n        }\r\n    }\r\n\r\n    const ModalAluno = () => {\r\n        const uploadImgAluno = (event) => {\r\n            event.preventDefault();\r\n    \r\n            let image = event.target.files[0];\r\n    \r\n            let nomeImg = criarGuid();\r\n    \r\n            storage.ref(nomeImg).put(image).then(async () => {\r\n                let a = await storage.ref(nomeImg).getDownloadURL();\r\n                formikAluno.setFieldValue(\"urlFoto\", a);\r\n            });\r\n        }\r\n\r\n        const formikAluno = useFormik({\r\n            initialValues : {\r\n                Nome : '',\r\n                Email : '',\r\n                DataNascimento: '',\r\n                CPF: '',\r\n                urlFoto: \"\",\r\n                idTurma: idTurmaAddAluno\r\n            },\r\n            onSubmit : values => {\r\n                fetch(`${url}/turma/adicionar-aluno`, {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                        \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                    }\r\n                })\r\n                .then(resultado => resultado.json())\r\n                .then(dados => {\r\n                    if(dados.sucesso){\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'success',\r\n                            autoDismiss : true\r\n                        });\r\n    \r\n                        formikAluno.resetForm();\r\n    \r\n                        listar();\r\n                    } \r\n                    else {\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'error',\r\n                            autoDismiss : true\r\n                        })\r\n                    }\r\n                    setShowModalAluno(false);\r\n                })\r\n            },\r\n            validationSchema : Yup.object().shape({\r\n                Nome: Yup.string()         \r\n                  .min(2, 'O nome deve ter no minimo 3 caracteres')\r\n                  .max(41, 'O nome deve ter no máximo 40 caracteres')\r\n                  .required('Informe um nome'),\r\n                Email: Yup.string()\r\n                  .required('Informe um email'),\r\n                DataNascimento: Yup.string()\r\n                  .required('Informe a data de nascimento'),\r\n                CPF: Yup.string()\r\n                  .required('Informe o CPF'),\r\n            })\r\n        })\r\n\r\n        return (\r\n            <Modal show={showModalAluno} onHide={handleCloseModalAluno}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Adicionar aluno</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {formikAluno.values.urlFoto &&<div style={{width: \"150px\", height: \"150px\", backgroundImage: `url(${formikAluno.values.urlFoto})`, margin: \"auto\", boxShadow: \"inset 2px 2px 5px black, 2px 2px 2px black\", backgroundSize: \"cover\", backgroundPosition: \"50% 50%\"}}></div>}\r\n                            <Form style={{margin: \"20px\", display: \"flex\", justifyContent: \"center\"}}>\r\n                                <FormFile>\r\n                                    <Form.Label htmlFor=\"Aluno\"><p style={{color: \"#0069D9\", cursor: \"pointer\"}}><i className=\"far fa-image\"></i>{ formikAluno.values.urlFoto === \"\" ? \" Selecionar imagem\": \" Trocar imagem\"}</p></Form.Label>\r\n                                    <Form.File\r\n                                        id=\"Aluno\"\r\n                                        label=\"Imagem do aluno\"\r\n                                        custom\r\n                                        accept=\"image/*\"\r\n                                        style={{display: \"none\"}}\r\n                                        onChange={event => uploadImgAluno(event)}\r\n                                    />\r\n                                </FormFile>\r\n                            </Form>\r\n                            <Form onSubmit={formikAluno.handleSubmit}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Nome</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        name=\"Nome\" \r\n                                        placeholder=\"Nome\"  \r\n                                        value={formikAluno.values.Nome} \r\n                                        onChange={formikAluno.handleChange}\r\n                                        required />\r\n                                        {formikAluno.errors.Nome && formikAluno.touched.Nome ? (<div className=\"error\">{formikAluno.errors.Nome}</div>) : null }\r\n                                </Form.Group>\r\n                                                            \r\n                                <Form.Group>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"Email\"\r\n                                        placeholder=\"Email\" \r\n                                        value={formikAluno.values.Email} \r\n                                        onChange={formikAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAluno.errors.Email && formikAluno.touched.Email ? (<div className=\"error\">{formikAluno.errors.Email}</div>) : null }\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Data de Nascimento</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"DataNascimento\"\r\n                                        placeholder=\"Data de nascimento\" \r\n                                        value={formikAluno.values.DataNascimento} \r\n                                        onChange={formikAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAluno.errors.DataNascimento && formikAluno.touched.DataNascimento ? (<div className=\"error\">{formikAluno.errors.DataNascimento}</div>) : null }\r\n                                </Form.Group>\r\n                                \r\n                                <Form.Group>\r\n                                    <Form.Label>CPF</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"CPF\"\r\n                                        placeholder=\"CPF\" \r\n                                        value={formikAluno.values.CPF} \r\n                                        onChange={formikAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAluno.errors.CPF && formikAluno.touched.CPF ? (<div className=\"error\">{formikAluno.errors.CPF}</div>) : null }\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"light\" onClick={handleCloseModalAluno}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={formikAluno.handleSubmit} variant=\"dark\" disabled={formikAluno.isSubmitting}>{formikAluno.isSubmitting ? <Spinner animation=\"border\" size=\"sm\" /> : null } Salvar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const buscar = (id) => {\r\n        fetch(`${url}/turma/detalhes/${id}`, {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        })\r\n        .then(resultado => resultado.json())\r\n        .then(dados => {\r\n            setTurma(dados.dados);\r\n        })\r\n    } \r\n\r\n    const ModalAlterarTurma = () => {\r\n        const formikAlterarTurma = useFormik({\r\n            initialValues : {\r\n                Nome : turma.nome,\r\n                idTurma: idTurmaAlterar\r\n            },\r\n            onSubmit : values => {\r\n                fetch(`${url}/turma/alterar-turma`, {\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                        \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                    }\r\n                })\r\n                .then(resultado => resultado.json())\r\n                .then(dados => {\r\n                    console.log(dados)\r\n                    if(dados.sucesso){\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'success',\r\n                            autoDismiss : true\r\n                        });\r\n    \r\n                        formikAlterarTurma.resetForm();\r\n    \r\n                        listar();\r\n                    } \r\n                    else {\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'error',\r\n                            autoDismiss : true\r\n                        })\r\n                    }\r\n                    setShowModalAlterarTurma(false);\r\n                })\r\n            },\r\n            validationSchema : Yup.object().shape({\r\n                Nome: Yup.string()         \r\n                  .min(2, 'O nome deve ter no minimo 3 caracteres')\r\n                  .max(41, 'O nome deve ter no máximo 40 caracteres')\r\n                  .required('Informe um nome')\r\n            })\r\n        })\r\n\r\n        return (\r\n            <Modal show={showModalAlterarTurma} onHide={handleCloseModalAlterarTurma}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Alterar turma</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Form onSubmit={formikAlterarTurma.handleSubmit}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Nome</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        name=\"Nome\" \r\n                                        placeholder=\"Nome\"  \r\n                                        value={formikAlterarTurma.values.Nome} \r\n                                        onChange={formikAlterarTurma.handleChange}\r\n                                        required />\r\n                                        {formikAlterarTurma.errors.Nome && formikAlterarTurma.touched.Nome ? (<div className=\"error\">{formikAlterarTurma.errors.Nome}</div>) : null }\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"light\" onClick={handleCloseModalAlterarTurma}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={formikAlterarTurma.handleSubmit} variant=\"dark\" disabled={formikAlterarTurma.isSubmitting}>{formikAlterarTurma.isSubmitting ? <Spinner animation=\"border\" size=\"sm\" /> : null } Salvar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{margin: \"50px 0\"}}>\r\n            <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                <h2 style={{marginRight: \"20px\"}}>{nomeTurma}</h2>\r\n                {\r\n                    tipo === 1 ?\r\n                    <div>\r\n                        <ModalAluno/>\r\n                        <i className=\"fas fa-pencil-alt\" style={{color: \"#0069D9\", cursor: \"pointer\"}} onClick={() => handleShowModalAlterarTurma(idTurma)}></i> <i className=\"fas fa-trash-alt\" style={{color: \"red\", cursor: \"pointer\"}} onClick={() => deletarTurma(idTurma)}></i> <i className=\"fas fa-plus\" style={{color: \"green\", cursor: \"pointer\"}} onClick={() => handleShowModalAluno(idTurma)}></i>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n            <Card>\r\n            <ModalAlterarTurma/>\r\n                <Card.Body>\r\n                    {\r\n                        alunos !== undefined && alunos.length > 0 ?\r\n                        <Carousel minimumTouchDrag={0} responsive={responsive} draggable={false} removeArrowOnDeviceType={[\"mobileL\", \"mobileS\", \"mobileLM\"]}>\r\n                        {\r\n                            alunos.map((aluno, index) => {\r\n                                return <Aluno idAluno={aluno.idAluno} nomeAluno={aluno.nomeAluno} email={aluno.email} dataNascimento={aluno.dataNascimento} urlFoto={aluno.urlFoto} cpf={aluno.cpf} tipo={tipo} listar={listar} key={index}/>\r\n                            })\r\n                        }\r\n                        </Carousel>\r\n                        :\r\n                        alunos.length === 0 ?\r\n                        <p>Essa turma ainda não tem alunos</p>\r\n                        :\r\n                        null\r\n                    }\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DetalhesDaInstituicao = () => {\r\n    const {idInstituicao} = useParams();\r\n    const history = useHistory();\r\n    const [turmas, setTurmas] = useState([]);\r\n    const [urlImagemFiltro, setUrlImagemFiltro] = useState(\"\");\r\n    const {addToast} = useToasts();\r\n\r\n    const [showModalCriarTurma, setShowModalCriarTurma] = useState(false);\r\n    const handleCloseModalCriarTurma = () => setShowModalCriarTurma(false);\r\n    const handleShowModalCriarTurma = () => setShowModalCriarTurma(true);\r\n\r\n    const ModalCriarTurma = () => {\r\n        const formikCriarTurma = useFormik({\r\n            initialValues : {\r\n                Nome : '',\r\n                idInstituicao: idInstituicao\r\n            },\r\n            onSubmit : values => {\r\n                fetch(`${url}/instituicao/adicionar-turma`, {\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                        \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                    }\r\n                })\r\n                .then(resultado => resultado.json())\r\n                .then(dados => {\r\n                    if(dados.sucesso){\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'success',\r\n                            autoDismiss : true\r\n                        });\r\n    \r\n                        formikCriarTurma.resetForm();\r\n    \r\n                        listar();\r\n                    } \r\n                    else {\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'error',\r\n                            autoDismiss : true\r\n                        })\r\n                    }\r\n                    setShowModalCriarTurma(false);\r\n                })\r\n            },\r\n            validationSchema : Yup.object().shape({\r\n                Nome: Yup.string()         \r\n                  .min(2, 'O nome deve ter no minimo 3 caracteres')\r\n                  .max(41, 'O nome deve ter no máximo 30 caracteres')\r\n                  .required('Informe um nome')\r\n            })\r\n        })\r\n\r\n        return (\r\n            <Modal show={showModalCriarTurma} onHide={handleCloseModalCriarTurma}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Adicionar Turma</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Form onSubmit={formikCriarTurma.handleSubmit}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Nome</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        name=\"Nome\" \r\n                                        placeholder=\"Nome\"  \r\n                                        value={formikCriarTurma.values.Nome} \r\n                                        onChange={formikCriarTurma.handleChange}\r\n                                        required />\r\n                                        {formikCriarTurma.errors.Nome && formikCriarTurma.touched.Nome ? (<div className=\"error\">{formikCriarTurma.errors.Nome}</div>) : null }\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"light\" onClick={handleCloseModalCriarTurma}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={formikCriarTurma.handleSubmit} variant=\"dark\" disabled={formikCriarTurma.isSubmitting}>{formikCriarTurma.isSubmitting ? <Spinner animation=\"border\" size=\"sm\" /> : null } Salvar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        listar();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        filtrarPorImagem();\r\n    }, [urlImagemFiltro])\r\n\r\n    const filtrarPorImagem = async () => {\r\n        const response = await fetch(`${url}/instituicao/listar-detalhes-da-instituicao/${idInstituicao}/urlimagem/${urlImagemFiltro.replaceAll(\"/\", \"barra\").replaceAll(\"?\", \"interrogacao\")}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        });\r\n        const data = await response.json();\r\n\r\n        if(data.dados != undefined)\r\n            setTurmas(data.dados);\r\n        else {\r\n            addToast(data.mensagem, {appearance: \"error\", autoDismiss: true});\r\n            setUrlImagemFiltro(\"\");\r\n        }\r\n    }\r\n\r\n    const upload = (event) => {\r\n        event.preventDefault();\r\n\r\n        let image = event.target.files[0];\r\n\r\n        let nomeImg = criarGuid();\r\n\r\n        console.log(image)\r\n\r\n        storage.ref(nomeImg).put(image).then(async () => {\r\n            let a = await storage.ref(nomeImg).getDownloadURL();\r\n            setUrlImagemFiltro(a);\r\n            console.log(urlImagemFiltro);\r\n        });\r\n    }\r\n\r\n    const sairDaInstituicao = async () => {\r\n        let resposta = window.confirm(\"Tem certeza de que deseja sair da instituição?\");\r\n        if(resposta) {\r\n            const response = await fetch(`${url}/instituicao/sair-da-instituicao`, {\r\n                method: \"PUT\",\r\n                body: JSON.stringify({\r\n                    idInstituicao: idInstituicao\r\n                }),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            });\r\n            const data = response.json();\r\n            if(data.sucesso) {\r\n                addToast(data.mensagem, {appearance: \"success\", autoDismiss: true});\r\n                history.push(\"/minhas-instituicoes\");\r\n            }\r\n            else{\r\n                addToast(data.mensagem, {appearance: \"error\", autoDismiss: true});\r\n            }\r\n        }  \r\n    }\r\n\r\n    const deletarInstituicao = async () => {\r\n        let resposta = window.confirm(\"Tem certeza de que deseja deletar a instituição? Tudo que ela contempla será deletado junto com ela!\");\r\n        if(resposta) {\r\n            const response = await fetch(`${url}/instituicao/deletar-instituicao`, {\r\n                method: \"DELETE\",\r\n                body: JSON.stringify({\r\n                    idInstituicao: idInstituicao\r\n                }),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            });\r\n            const data = response.json();\r\n            if(data.sucesso) {\r\n                addToast(data.mensagem, {appearance: \"success\", autoDismiss: true});\r\n                history.push(\"/minhas-instituicoes\");\r\n            }\r\n            else{\r\n                addToast(data.mensagem, {appearance: \"error\", autoDismiss: true});\r\n            }\r\n        }  \r\n    }\r\n\r\n    const listar = async () => {\r\n        const response = await fetch(`${url}/instituicao/listar-detalhes-da-instituicao/${idInstituicao}/nome/`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        });\r\n        const data = await response.json();\r\n\r\n        if(data.dados != undefined)\r\n            setTurmas(data.dados);\r\n        else \r\n            addToast(data.mensagem, {appearance: \"error\", autoDismiss: true});\r\n    }\r\n\r\n    const formikFiltroPorNome = useFormik({\r\n        initialValues: {\r\n            nome: \"\"\r\n        },\r\n        onSubmit: (values) => {\r\n            fetch(`${url}/instituicao/listar-detalhes-da-instituicao/${idInstituicao}/nome/${values.nome}`, {\r\n                headers: {\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.dados != undefined)\r\n                    setTurmas(data.dados);\r\n                else \r\n                    addToast(data.mensagem, {appearance: \"error\", autoDismiss: true});\r\n            });\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Container style={{width: \"95vw\"}}>\r\n            <div style={{textAlign: \"right\"}}>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\r\n                        <i className=\"fas fa-ellipsis-v\" style={{fontSize: \"20px\"}}></i><i className=\"fas fa-ellipsis-v\" style={{fontSize: \"20px\"}}></i><i className=\"fas fa-ellipsis-v\" style={{fontSize: \"20px\"}}></i>\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        {\r\n                            turmas.tipo === 1 ?\r\n                            <>\r\n                                <Dropdown.Header style={{color: \"black\"}}><i className=\"fas fa-cog\"></i> Configurações da instituição</Dropdown.Header>\r\n                                <ModalCriarTurma/>\r\n                                <Dropdown.Item onClick={handleShowModalCriarTurma}>Adicionar turma</Dropdown.Item>\r\n                                <Dropdown.Item>Editar instituição</Dropdown.Item>\r\n                                <hr></hr>\r\n                            </>\r\n                            :\r\n                            null\r\n                        }\r\n                        <Dropdown.Header style={{color: \"red\"}}><i className=\"fas fa-skull\"></i> Área de risco</Dropdown.Header>\r\n                        <Dropdown.Item style={{color: \"red\"}} onClick={() => sairDaInstituicao()}>Sair da instituição</Dropdown.Item>\r\n                        {\r\n                            turmas.tipo === 1 ?\r\n                            <Dropdown.Item style={{color: \"red\"}} onClick={() => deletarInstituicao()}>Deletar instituição</Dropdown.Item>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n                <Form style={{marginTop: \"50px\"}}> \r\n                    <Form.Row className=\"align-items-center justify-content-center\">\r\n                        <Col xs=\"auto\">\r\n                            <InputGroup className=\"mb-2\">\r\n                                <FormControl id=\"inlineFormInputGroup\" name=\"nome\" placeholder=\"Pesquisar por nome...\" value={formikFiltroPorNome.values.nome} onChange={formikFiltroPorNome.handleChange}/>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text style={{cursor: \"pointer\"}} onClick={formikFiltroPorNome.handleSubmit}>\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                <p style={{textAlign: \"center\"}}>Ou...</p>\r\n                <p style={{textAlign: \"center\"}}>Por reconhecimento facial</p>\r\n                {urlImagemFiltro &&<div style={{width: \"150px\", height: \"150px\", backgroundImage: `url(${urlImagemFiltro})`, margin: \"auto\", boxShadow: \"inset 2px 2px 5px black, 2px 2px 2px black\", backgroundSize: \"cover\", backgroundPosition: \"50% 50%\"}}></div>}\r\n                <Form style={{margin: \"20px\", display: \"flex\", justifyContent: \"center\"}}>\r\n                    <FormFile>\r\n                        <Form.Label htmlFor=\"fileAluno\"><p style={{color: \"#0069D9\", cursor: \"pointer\"}}><i className=\"far fa-image\"></i>{ urlImagemFiltro === \"\" ? \" Selecionar imagem\": \" Trocar imagem\"}</p></Form.Label>\r\n                        <Form.File\r\n                            id=\"fileAluno\"\r\n                            label=\"Imagem do aluno\"\r\n                            custom\r\n                            accept=\"image/*\"\r\n                            style={{display: \"none\"}}\r\n                            onChange={event => upload(event)}\r\n                        />\r\n                    </FormFile>\r\n                </Form>\r\n                {\r\n                    turmas.turmas !== undefined && turmas.turmas.length > 1 && urlImagemFiltro != \"\"?\r\n                    <div style={{width: \"83vw\", display: \"flex\", justifyContent: \"center\"}}>\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </div>:\r\n                    turmas.turmas !== undefined\r\n                    ?\r\n                    turmas.turmas.map((turma, index) => {\r\n                        return <Turma idTurma={turma.idTurma} nomeTurma={turma.nomeTurma} alunos={turma.alunos} tipo={turmas.tipo} listar={listar} key={index}/>\r\n                    })\r\n                    :\r\n                    <div style={{width: \"83vw\", display: \"flex\", justifyContent: \"center\"}}>\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </div>\r\n                }\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nconst criarGuid = () => {\r\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n    );\r\n}\r\n\r\nexport default DetalhesDaInstituicao;","import React, {useState, useEffect} from \"react\";\r\nimport {Container, ListGroup, Card, Spinner} from \"react-bootstrap\";\r\nimport { useParams } from \"react-router\";\r\nimport {url} from \"../../utils/constants\";\r\n\r\nconst Pessoa = (id, nome) => {\r\n    return (\r\n        <ListGroup.Item>{nome}</ListGroup.Item>\r\n    )\r\n}\r\n\r\nconst PessoasDaInstituicao = () => {\r\n    const {idInstituicao} = useParams();\r\n    const [pessoas, setPessoas] = useState([]);\r\n\r\n    const listar = async () => {\r\n        const response = await fetch(`${url}/instituicao/listar-pessoas-da-instituicao/${idInstituicao}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        });\r\n        const data = await response.json();\r\n\r\n        setPessoas(data.dados);\r\n    }\r\n\r\n    useEffect(() => {\r\n        listar();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Container style={{width: \"90%\"}}>\r\n                {\r\n                    pessoas.colaboradores !== undefined && pessoas.administradores !== undefined?\r\n                        <div>\r\n                            <h1>Administradores</h1>\r\n                            <ListGroup variant=\"flush\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Container fluid>\r\n                                            {\r\n                                                pessoas.colaboradores.map((administrador, index) => {\r\n                                                    return <Pessoa id={administrador.id} nome={administrador.nome} key={index}/>\r\n                                                })\r\n                                            }\r\n                                        </Container>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </ListGroup>\r\n                            <h1>Colaboradores</h1>\r\n                        </div>\r\n                    :\r\n                    <div style={{width: \"83vw\", display: \"flex\", justifyContent: \"center\"}}>\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </div>\r\n                }\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PessoasDaInstituicao;","import React, { useState } from 'react';import Menu from '../../components/menu';\r\nimport Rodape from '../../components/rodape';\r\nimport { useHistory } from 'react-router-dom';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {Container, Form, Jumbotron, Button} from 'react-bootstrap';\r\nimport './style.css'\r\n\r\nconst EsqueciaSenha =()=>{\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n\r\n    const Recuperar =(event)=>{\r\n\r\n    event.preventDefault();\r\n    console.log(email);\r\n\r\n    fetch('http://localhost:500/conta/redefinir-senha',{\r\n            methot : 'POST',\r\n            body : JSON.stringify({\r\n                email : email,\r\n            }),\r\n            headers : {\r\n                'context-type' : 'application/json'\r\n            }\r\n        })\r\n        .then(response => {\r\n           if(response.ok){\r\n               return response.json();\r\n           }\r\n           alert('dados invalidos');\r\n        })\r\n        .then(data => {\r\n            //salva o token no localstorage\r\n            localStorage.setItem('token-carango', data.token);\r\n            //decodifica o Data.token\r\n            let usuario = jwt_decode(data.token)\r\n            console.log(usuario)\r\n            //redireciona para a ..... apos o login\r\n            history.push('....')\r\n            \r\n        })\r\n        .catch(err => console.error(err));\r\n\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    return(\r\n        <div>\r\n            <Menu />\r\n           \r\n                <Container className=\"jumb\">\r\n                <Jumbotron className=\"text-center\">\r\n                     <Form >\r\n                         <h1>Recupere sua senha\r\n\r\n                         </h1>\r\n                         <p>Insira seu email para Recuperar sua conta.</p>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control value={email} onChange={event=> setEmail(event.target.value)} type=\"email\" placeholder=\"Digite seu email\" />\r\n                            </Form.Group>\r\n                            <Button onClick={event => Recuperar(event)} style={{marginTop : '18px'}}  className='button' variant=\"dark\" type=\"submit\"> Recuperar </Button>\r\n\r\n                     </Form> \r\n                     </Jumbotron>\r\n\r\n                </Container>\r\n           \r\n            \r\n            <Rodape />\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default EsqueciaSenha;","import React from 'react';\r\nimport Menu from '../../components/menu';\r\nimport Rodape from '../../components/rodape';\r\nimport {Container, Jumbotron, Form, Button} from 'react-bootstrap';\r\n\r\nimport imglog from './image/imglog.png'\r\n\r\n\r\nconst Perfil =()=>{\r\n    return(\r\n        <div>\r\n            <Menu />\r\n\r\n            <Container className=\"container\">\r\n\r\n<Jumbotron  className='jumb'>\r\n<div className='text-center' >\r\n<img alt=\"Carongo\" src={imglog} style={{ width : '175px'}} />\r\n\r\n</div>\r\n\r\n<Form >\r\n<h1 style={{color : '#FF6900'}}>Perfil</h1>\r\n    \r\n<Form.Group controlId=\"formBasicEmail\">\r\n<Form.Label>Nome</Form.Label>\r\n<Form.Control type=\"name\" placeholder=\"Digite seu nome\" />\r\n</Form.Group>\r\n\r\n<Form.Group controlId=\"formBasicEmail\">\r\n<Form.Label>Email</Form.Label>\r\n<Form.Control type=\"email\" placeholder=\"Digite seu email\" />\r\n</Form.Group>\r\n\r\n<Form.Group controlId=\"formBasicPassword\">\r\n<Form.Label>Senha</Form.Label>\r\n<Form.Control type=\"password\" placeholder=\"Digite sua senha\" />\r\n</Form.Group>\r\n\r\n<Button className='button' variant=\"dark\" type=\"submit\">\r\nSalvar\r\n</Button>\r\n</Form>\r\n\r\n</Jumbotron>\r\n\r\n\r\n\r\n</Container>\r\n            <Rodape />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Perfil;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport Login from './pages/login';\r\nimport Cadastro from './pages/cadastro';\r\nimport Home from './pages/home/index';\r\nimport DetalhesDaInstituicao from \"./pages/detalhes-da-instituicao/detalhes-da-instituicao\";\r\nimport PessoasDaInstituicao from \"./pages/pessoas-da-instituicao/pessoas-da-instituicao\";\r\nimport EsqueciaSenha from './pages/esqueciasenha';\r\nimport Perfil from './pages/perfil';\r\n\r\nimport { ToastProvider } from 'react-toast-notifications';\r\n\r\nconst RotaPrivadaLogado = ({component : Component, ...rest}) => (\r\n  <Route\r\n    {...rest}\r\n    render= {\r\n      props => \r\n      localStorage.getItem(\"token-carongo\") !== null ?\r\n        <Component {...props}/> :\r\n        <Redirect to={{pathname: \"/login\", state: {from: props.location}}}/>\r\n    }\r\n  />\r\n);\r\n\r\n\r\nconst RotaPrivadaNaoLogado = ({component : Component, ...rest}) => (\r\n  <Route\r\n    {...rest}\r\n    render= {\r\n      props => \r\n      localStorage.getItem(\"token-carongo\") === null ?\r\n        <Component {...props}/> :\r\n        <Redirect to={{pathname: \"/minhas-instituicoes\", state: {from: props.location}}}/>\r\n    }\r\n  />\r\n);\r\n\r\nconst routing = (\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <Switch>\r\n      <RotaPrivadaNaoLogado exact path=\"/\" component={Home} />\r\n      <RotaPrivadaNaoLogado path=\"/carongo-web/login\" component={Login} /> \r\n      <RotaPrivadaNaoLogado path=\"/cadastro\" component={Cadastro} />\r\n      <RotaPrivadaNaoLogado path=\"/esqueci-minha-senha\" component={EsqueciaSenha} /> {/*http://localhost:5000/conta/solicitar-nova-senha*/}\r\n      <RotaPrivadaNaoLogado path=\"/esqueci-minha-senha/redefinir-senha/:jwt\" component={Cadastro} /> {/*http://localhost:5000/conta/redefinir-senha*/}\r\n\r\n      <RotaPrivadaLogado path=\"/minhas-instituicoes\" component={Cadastro} /> {/*http://localhost:5000/instituicao/listar-minhas-instituicoes, http://localhost:5000/instituicao/criar-instituicao, http://localhost:5000/instituicao/entrar-na-instituicao*/}\r\n      <RotaPrivadaLogado path=\"/detalhes-da-instituicao/:idInstituicao\" component={DetalhesDaInstituicao} /> {/*http://localhost:5000/instituicao/alterar-instituicao*/}\r\n      <RotaPrivadaLogado path=\"/pessoas-da-instituicao/:idInstituicao\" component={PessoasDaInstituicao} /> {/*http://localhost:5000/instituicao/listar-pessoas-da-instituicao/F6F08E78-CCBC-4C97-9673-B03B3F592C67, http://localhost:5000/instituicao/adicionar-administrador, http://localhost:5000/instituicao/expulsar-colaborador*/}\r\n      <RotaPrivadaLogado path=\"/meu-perfil\" component={Perfil} /> {/*http://localhost:5000/conta/listar-meu-perfil, http://localhost:5000/conta/alterar-usuario, http://localhost:5000/conta/alterar-senha, http://localhost:5000/conta/deletar-conta*/}\r\n    </Switch>\r\n  </Router>\r\n)\r\n\r\nReactDOM.render(\r\n  <ToastProvider>\r\n    {routing}\r\n  </ToastProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.21fb3849.jpeg\";"],"sourceRoot":""}