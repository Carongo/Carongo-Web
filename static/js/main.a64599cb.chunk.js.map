{"version":3,"sources":["assets/img/Carrousel1.png","assets/img/Carrousel2.png","assets/img/eurekinha.png","serviceWorker.js","utils/constants.js","components/menu/index.jsx","components/rodape/index.jsx","pages/login/index.jsx","pages/cadastro/index.jsx","pages/home/index.js","pages/detalhes-da-instituicao/detalhes-da-instituicao.js","pages/pessoas-da-instituicao/pessoas-da-instituicao.js","pages/minhas-instituicoes/minhas-instituicoes.js","pages/redefinir-senha/redefinir-senha.js","pages/esqueciasenha/index.jsx","index.js","assets/img/logo.jpeg"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","url","Menu","idInstituicao","pagina","history","useHistory","useState","perfil","setPerfil","sair","confirm","localStorage","removeItem","push","useEffect","listar","a","fetch","headers","getItem","response","json","data","dados","MeuPerfil","showModalAlterarPerfil","setShowModalAlterarPerfil","handleCloseModalAlterarPerfil","handleShowModalAlterarPerfil","showModalAlterarSenha","setShowModalAlterarSenha","handleCloseModalAlterarSenha","handleShowModalAlterarSenha","addToast","useToasts","ModalEditarPerfil","nome","setNome","email","setEmail","alterarPerfil","method","body","JSON","stringify","sucesso","mensagem","appearance","autoDismiss","Modal","show","onHide","Header","closeButton","Title","Body","Card","Form","Group","Label","Control","type","name","placeholder","value","onChange","event","target","required","Footer","Button","variant","onClick","ModalAlterarSenha","senhaAtual","setSenhaAtual","senhaNova","setSenhaNova","alterarSenha","deletarPerfil","className","map","direction","DropdownButton","as","ButtonGroup","key","id","drop","title","jwt_decode","Dropdown","Item","eventKey","class","style","color","Navbar","collapseOnSelect","expand","bg","href","alt","src","logo","width","Toggle","aria-controls","Collapse","Nav","Link","Brand","undefined","Rodape","backgroundColor","Col","sm","Login","senha","setSenha","Container","Jumbotron","controlId","marginTop","preventDefault","setItem","err","logar","Cadastro","ok","alert","cadastrar","Home","Carousel","fluid","carousel1","carousel2","Row","eurekinha","storage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","responsive","desktop","breakpoint","max","min","items","laptop","tabletS","tabletM","tabletL","mobileS","mobileM","mobileL","Aluno","idAluno","nomeAluno","dataNascimento","urlFoto","cpf","tipo","showModalAlterarAluno","setShowModalAlterarAluno","aluno","setAluno","handleCloseModalAlterarAluno","idAlunoAlterar","setIdAlunoAlterar","buscar","resultado","deletarAluno","ModalAlterarAluno","formikAlterarAluno","useFormik","initialValues","Nome","Email","DataNascimento","CPF","onSubmit","values","resetForm","validationSchema","Yup","shape","height","backgroundImage","margin","boxShadow","backgroundSize","backgroundPosition","display","justifyContent","FormFile","htmlFor","cursor","File","label","custom","accept","image","files","nomeImg","criarGuid","ref","put","getDownloadURL","setFieldValue","uploadImgAluno","handleSubmit","handleChange","errors","touched","disabled","isSubmitting","Spinner","animation","size","Img","Text","Turma","idTurma","nomeTurma","alunos","showModalAluno","setShowModalAluno","handleCloseModalAluno","idTurmaAddAluno","setIdTurmaAddLuno","showModalAlterarTurma","setShowModalAlterarTurma","turma","setTurma","handleCloseModalAlterarTurma","idTurmaAlterar","setIdTurmaAlterar","deletarTurma","ModalAluno","formikAluno","ModalAlterarTurma","formikAlterarTurma","alignItems","marginRight","length","minimumTouchDrag","draggable","removeArrowOnDeviceType","index","replace","c","crypto","getRandomValues","Uint8Array","toString","DetalhesDaInstituicao","useParams","turmas","setTurmas","urlImagemFiltro","setUrlImagemFiltro","msg","setMsg","showModalCriarTurma","setShowModalCriarTurma","handleCloseModalCriarTurma","ModalCriarTurma","formikCriarTurma","filtrarPorImagem","replaceAll","sairDaInstituicao","deletarInstituicao","formikFiltroPorNome","minHeight","textAlign","fontSize","xs","InputGroup","FormControl","Prepend","upload","role","Pessoa","idUI","meuId","adm","expulsarColaborador","idUsuarioInstituicao","ListGroup","background","borderRadius","fontWeight","substring","toUpperCase","PessoasDaInstituicao","pessoas","setPessoas","setAdm","setMeuId","emailUsuario","setEmailUsuario","jti","administradores","find","u","adicionarAdministrador","idUsuario","codigo","colaboradores","administrador","colaborador","Instituicao","descricao","tipoUsuario","Subtitle","MinhasInstituicoes","instituicoes","setInstituicoes","showModalCriarInstituicao","setShowModalCriarInstituicao","handleCloseModalCriarInstituicao","showModalEntrarNaInstituicao","setShowModalEntrarNaInstituicao","handleCloseModalEntrarNaInstituicao","ModalCriarInstituicao","nomeInstituicao","setNomeInstituicao","descricaoInstituicao","setDescricaoInstituicao","criarInstituicao","ModalEntrarNaInstituicao","setCodigo","entrarNaInstituicao","flexWrap","instituicao","Redefinir","jwt","token","resposta","redefinicao","EsqueciaSenha","Recuperar","RotaPrivadaLogado","Component","component","rest","render","props","to","pathname","from","RotaPrivadaNaoLogado","routing","basename","process","exact","path","RedefinirSenha","ReactDOM","document","getElementById","URL","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a64599cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Carrousel1.e2b1d1f2.png\";","module.exports = __webpack_public_path__ + \"static/media/Carrousel2.f18072f1.png\";","module.exports = __webpack_public_path__ + \"static/media/eurekinha.bd8d39ef.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const url = \"http://localhost:5000\";","import React, {useState, useEffect} from \"react\";\r\nimport{Navbar, Nav, Dropdown, DropdownButton, ButtonGroup, Button, Modal, Form, Card } from 'react-bootstrap';\r\nimport logo from '../../assets/img/logo.jpeg'\r\nimport {useHistory} from 'react-router-dom';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {url} from \"../../utils/constants\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\n\r\nconst Menu=({idInstituicao, pagina})=> {\r\n    const history = useHistory();\r\n    const [perfil, setPerfil] = useState({});\r\n\r\n    const sair = ()=>{\r\n      let resposta = window.confirm(\"Tem certeza de que deseja fazer logout?\")\r\n      if(resposta){\r\n        localStorage.removeItem('token-carongo');\r\n\r\n        history.push('/')\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      listar();\r\n    }, [])\r\n\r\n    const listar = async () => {\r\n      const response = await fetch(`${url}/conta/listar-meu-perfil`, {\r\n        headers: {\r\n            \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n        }\r\n      });\r\n      const data = await response.json();\r\n      setPerfil(data.dados);\r\n    }\r\n\r\n    const MeuPerfil = () => {\r\n      const [showModalAlterarPerfil, setShowModalAlterarPerfil] = useState(false);\r\n      const handleCloseModalAlterarPerfil = () => setShowModalAlterarPerfil(false);\r\n      const handleShowModalAlterarPerfil = () => setShowModalAlterarPerfil(true);\r\n\r\n      const [showModalAlterarSenha, setShowModalAlterarSenha] = useState(false);\r\n      const handleCloseModalAlterarSenha = () => setShowModalAlterarSenha(false);\r\n      const handleShowModalAlterarSenha = () => setShowModalAlterarSenha(true);\r\n      \r\n      const {addToast} = useToasts();\r\n\r\n      const ModalEditarPerfil = () => {\r\n        const [nome, setNome] = useState(perfil.nome);\r\n        const [email, setEmail] = useState(perfil.email);\r\n\r\n        const alterarPerfil = async () => {\r\n            const response = await fetch(`${url}/conta/alterar-usuario`, {\r\n                method: \"PUT\",\r\n                body: JSON.stringify({\r\n                    email: email,\r\n                    nome: nome\r\n                }),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            })\r\n\r\n            const dados = await response.json()\r\n            \r\n            \r\n            if(dados.sucesso){\r\n              addToast(dados.mensagem, {\r\n                  appearance : 'success',\r\n                  autoDismiss : true\r\n              });\r\n              listar();\r\n                handleCloseModalAlterarPerfil();\r\n          } \r\n          else {\r\n              addToast(dados.mensagem, {\r\n                  appearance : 'error',\r\n                  autoDismiss : true\r\n              })\r\n          }\r\n        }\r\n\r\n        return <Modal show={showModalAlterarPerfil} onHide={handleCloseModalAlterarPerfil}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Alterar perfil</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label>Nome</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"Nome\" \r\n                                    placeholder=\"Nome\"  \r\n                                    value={nome} \r\n                                    onChange={event => setNome(event.target.value)}\r\n                                    required />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"Email\" \r\n                                    placeholder=\"Email\"  \r\n                                    value={email} \r\n                                    onChange={event => setEmail(event.target.value)}\r\n                                    required />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"light\" onClick={handleCloseModalAlterarPerfil}>\r\n                    Cancelar\r\n                </Button>\r\n                <Button type=\"submit\" onClick={() => alterarPerfil()} variant=\"dark\"> Salvar</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n      }\r\n\r\n      const ModalAlterarSenha = () => {\r\n        const [senhaAtual, setSenhaAtual] = useState(\"\");\r\n        const [senhaNova, setSenhaNova] = useState(\"\");\r\n\r\n        const alterarSenha = async () => {\r\n            const response = await fetch(`${url}/conta/alterar-senha`, {\r\n                method: \"PUT\",\r\n                body: JSON.stringify({\r\n                    senhaAtual: senhaAtual,\r\n                    senhaNova: senhaNova\r\n                }),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            })\r\n\r\n            const dados = await response.json()\r\n\r\n            if(dados.sucesso){\r\n              addToast(dados.mensagem, {\r\n                  appearance : 'success',\r\n                  autoDismiss : true\r\n              });\r\n              listar();\r\n              handleCloseModalAlterarSenha();\r\n          } \r\n          else {\r\n              addToast(dados.mensagem, {\r\n                  appearance : 'error',\r\n                  autoDismiss : true\r\n              })\r\n          }\r\n            \r\n        }\r\n\r\n        return <Modal show={showModalAlterarSenha} onHide={handleCloseModalAlterarSenha}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Alterar senha</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label>Senha atual</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"Senhaatual\" \r\n                                    placeholder=\"Senha atual\"  \r\n                                    value={senhaAtual} \r\n                                    onChange={event => setSenhaAtual(event.target.value)}\r\n                                    required />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Senha nova</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"SenhaNova\" \r\n                                    placeholder=\"Senha nova\"  \r\n                                    value={senhaNova} \r\n                                    onChange={event => setSenhaNova(event.target.value)}\r\n                                    required />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"light\" onClick={handleCloseModalAlterarSenha}>\r\n                    Cancelar\r\n                </Button>\r\n                <Button type=\"submit\" onClick={() => alterarSenha()} variant=\"dark\"> Salvar</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n      }\r\n\r\n      const deletarPerfil = async () => {\r\n        const resposta = window.confirm(\"Tem certeza de que deseja deletar sua conta? Todos os dados relacionados a ela também serão excluídos.\");\r\n        if(resposta){\r\n          const response = await fetch(`${url}/usuario/deletar-conta`, {\r\n            method: \"DELETE\",\r\n            body: null,\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n          });\r\n          const data = await response.json();\r\n          if(data.sucesso) {\r\n            addToast(data.mensagem, {appearance: \"success\", autoDismiss: true});\r\n            localStorage.removeItem(\"token-carongo\");\r\n            history.push(\"/\")\r\n          }\r\n          else {\r\n            addToast(data.mensagem, {appearance: \"error\", autoDismiss: true});\r\n          }\r\n        } \r\n        \r\n    }\r\n\r\n      return <div className=\"mb-2\">\r\n        {['left'].map((direction) => (\r\n          <DropdownButton\r\n            as={ButtonGroup}\r\n            key={direction}\r\n            id={`dropdown-button-drop-${direction}`}\r\n            drop={direction}\r\n            variant=\"primary\"\r\n            title={` ${jwt_decode(localStorage.getItem(\"token-carongo\")).nome} `}\r\n          >\r\n            <Dropdown.Header>{perfil.nome}</Dropdown.Header>\r\n            <Dropdown.Header>{perfil.email}</Dropdown.Header>\r\n            <hr></hr>\r\n            <ModalEditarPerfil/>\r\n            <Dropdown.Item eventKey=\"1\" onClick={handleShowModalAlterarPerfil}>Editar perfil</Dropdown.Item>\r\n            <ModalAlterarSenha/>\r\n            <Dropdown.Item eventKey=\"2\" onClick={handleShowModalAlterarSenha}>Alterar senha</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"3\" onClick={sair}><i class=\"fas fa-sign-out-alt\"></i> Logout</Dropdown.Item>\r\n            <Dropdown.Item style={{color: \"red\"}} onClick={deletarPerfil}><i class=\"fas fa-trash-alt\"></i> Deletar conta</Dropdown.Item>\r\n          </DropdownButton>\r\n        ))}\r\n      </div>\r\n    }\r\n\r\n    const renderMenu = () =>{\r\n        const token = localStorage.getItem('token-carongo');\r\n        \r\n        if(token === null){\r\n          return(\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n              <a href=\"/Carongo-Web/\"><img  alt=\"Carongo\" src={logo} style={{ width : '175px'}} /></a>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  <Nav.Link href=\"/Carongo-Web/login\">Login</Nav.Link>\r\n                  <Nav.Link href=\"/Carongo-Web/cadastro\">Cadastre-se</Nav.Link>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          );\r\n        }\r\n        else if(pagina===\"Detalhes\") {\r\n          return(\r\n            <div>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href={`/Carongo-Web/minhas-instituicoes`}><i class=\"fas fa-arrow-left\"></i></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                          <Nav className=\"mr-auto\">\r\n                            <Nav.Link href={`/Carongo-Web/pessoas-da-instituicao/${idInstituicao}`}>Pessoas da instituição</Nav.Link>\r\n                          </Nav>\r\n                            <Nav>\r\n                                <Nav.Link><MeuPerfil/></Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                  </Navbar>\r\n            </div>\r\n        )\r\n        }\r\n        else if(pagina===\"Pessoas\"){\r\n            return(\r\n                <div>\r\n                    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                        <Navbar.Brand href={`/Carongo-Web/detalhes-da-instituicao/${idInstituicao}`}><i class=\"fas fa-arrow-left\"></i></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                              <Nav className=\"mr-auto\">\r\n                                <Nav.Link href=\"/Carongo-Web/pages/login\"></Nav.Link>\r\n                              </Nav>\r\n                              <MeuPerfil/>\r\n                            </Navbar.Collapse>\r\n                      </Navbar>\r\n                </div>\r\n            )\r\n        }\r\n        else if(idInstituicao===undefined){\r\n          return(\r\n            <div>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/Carongo-Web/minhas-instituicoes\">Carongo</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                          <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/Carongo-Web/minhas-instituicoes\"></Nav.Link>\r\n                          </Nav>\r\n                            <Nav>\r\n                                <Nav.Link><MeuPerfil/></Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                  </Navbar>\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderMenu()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","//Suponha que seu site tenha 10 páginas com o mesmo rodapé em todos eles. Se um dia você quiser mudar o rodapé do site, você terá que mudar em todas as 10 páginas. Pra isso serve os components, para facilitar.\r\n\r\n//Importa React de react.\r\nimport React from \"react\";\r\n//Importa o css específico do index. O Global está em App.css\r\n\r\nimport logo from '../../assets/img/logo.jpeg'\r\n\r\nimport \"./rodape.css\"\r\n\r\n\r\nimport {Col} from 'react-bootstrap';\r\n\r\nconst Rodape =()=>{\r\n    return(\r\n        <div style={{backgroundColor : '#343A40'}}>\r\n            <container className='rodape' >\r\n                <div>\r\n               <a href=\"/Carongo-Web/\"> <Col sm={8}><img alt=\"Carongo\" src={logo} style={{ width : '175px'}} /></Col></a>\r\n                </div>\r\n            </container>\r\n            <div className='text-center'>\r\n                <h2>Senai de Informatica - 2021</h2>\r\n            </div>\r\n   \r\n    \r\n    \r\n  \r\n    \r\n \r\n    \r\n     \r\n  \r\n \r\n\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rodape;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Menu from '../../components/menu';\r\nimport Rodape from '../../components/rodape';\r\nimport { Form, Button, Container, Jumbotron } from 'react-bootstrap';\r\nimport {url} from \"../../utils/constants\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\nimport './login.css';\r\n\r\nconst Login =() =>{\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const {addToast} = useToasts();\r\n    \r\n    const logar=(event)=>{\r\n        event.preventDefault();\r\n\r\n        fetch(`${url}/conta/entrar`, {\r\n            method : 'POST',\r\n            body : JSON.stringify({\r\n                email : email,\r\n                senha : senha\r\n            }),\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(dados => {\r\n            if(dados.sucesso){\r\n                addToast(dados.mensagem, {\r\n                    appearance : 'success',\r\n                    autoDismiss : true\r\n                });\r\n                localStorage.setItem('token-carongo', dados.dados);\r\n                history.push('/Carongo-Web/minhas-instituicoes')\r\n            } \r\n            else {\r\n                addToast(dados.mensagem, {\r\n                    appearance : 'error',\r\n                    autoDismiss : true\r\n                })\r\n            }\r\n        })\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n    return (\r\n            \r\n        <div>\r\n            <Menu />\r\n            <Container className=\"cont\">\r\n                <Jumbotron  className='jumb'>\r\n                    <div className='text-center' >\r\n                        <h1 className=\"text-center\">\r\n                            Login\r\n                        </h1>\r\n                    </div>\r\n                    <Form >\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control value={email} onChange={event=> setEmail(event.target.value)} type=\"email\" placeholder=\"Digite seu email\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Senha</Form.Label>\r\n                            <Form.Control value={senha} onChange={event=> setSenha(event.target.value)} type=\"password\" placeholder=\"Digite sua senha\" />\r\n                        </Form.Group>\r\n\r\n                        \r\n                        <Button style={{marginTop : '18px'}} onClick={event => logar(event)}  className='button' variant=\"dark\" type=\"submit\">\r\n                            Entrar\r\n                        </Button><div className=\"op\" style={{marginTop: \"25px\"}} >\r\n                            <a href=\"/Carongo-Web/cadastro\">Cadastre-se</a>\r\n                            <a href=\"/Carongo-Web/esqueci-minha-senha\">Esqueci minha senha</a>\r\n                        </div>\r\n                    </Form>\r\n                </Jumbotron>\r\n            </Container>\r\n            <Rodape />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport{ Jumbotron, Container, Form, Button, } from 'react-bootstrap';\r\nimport Menu from '../../components/menu';\r\nimport Rodape from '../../components/rodape';\r\nimport {useToasts} from \"react-toast-notifications\";\r\n\r\nimport \"./cadastro.css\"\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Cadastro =()=>{\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const [nome, setNome] = useState('');\r\n  const {addToast} = useToasts();\r\n\r\n  const cadastrar =(event)=>{\r\n\r\n    event.preventDefault();\r\n    console.log(nome + email + senha);\r\n\r\n    fetch('http://localhost:5000/conta/cadastrar-se',{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            email : email,\r\n            senha : senha,\r\n            nome : nome \r\n        }),\r\n        headers : {\r\n            'content-type' : 'application/json'\r\n        }\r\n    })\r\n    .then(response => {\r\n       if(response.ok){\r\n           return response.json();\r\n       }\r\n       alert('dados invalidos');\r\n    })\r\n    .then(dados => {\r\n        if(dados.sucesso){\r\n            addToast(dados.mensagem, {\r\n                appearance : 'success',\r\n                autoDismiss : true\r\n            });\r\n            localStorage.setItem('token-carongo', dados.dados);\r\n            history.push('/Carongo-Web/minhas-instituicoes')\r\n        } \r\n        else {\r\n            addToast(dados.mensagem, {\r\n                appearance : 'error',\r\n                autoDismiss : true\r\n            })\r\n        }\r\n    })\r\n    .catch(err => console.error(err));\r\n\r\n\r\n}\r\n    return(\r\n\r\n        <div>\r\n            <Menu />\r\n            <Container className=\"cont\">\r\n\r\n                <Jumbotron  className='jumb'>\r\n\r\n            <div className='text-center' >\r\n                <h1>\r\n                    Cadastro\r\n                </h1>\r\n           </div>\r\n\r\n       <Form >\r\n                               \r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Nome</Form.Label>\r\n              <Form.Control value={nome} onChange={event=> setNome(event.target.value)} type=\"name\" placeholder=\"Digite seu nome\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control value={email} onChange={event=> setEmail(event.target.value)}  type=\"email\" placeholder=\"Digite seu email\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Senha</Form.Label>\r\n              <Form.Control value={senha} onChange={event=> setSenha(event.target.value)} type=\"password\" placeholder=\"Digite sua senha\" />\r\n            </Form.Group>\r\n            \r\n            <Button  onClick={event => cadastrar(event)} className='button' variant=\"dark\" type=\"submit\">\r\n              Cadastrar\r\n            </Button>\r\n            <div style={{marginTop: \"25px\"}}>\r\n                            <a href=\"/Carongo-Web/login\">Já é cadastrado? Faça login</a>\r\n\r\n            </div>\r\n  \r\n        </Form>\r\n\r\n                </Jumbotron>\r\n\r\n\r\n            </Container>\r\n            <Rodape />\r\n\r\n        </div>\r\n    )\r\n}\r\n \r\n\r\nexport default Cadastro;","import React from 'react';\r\nimport { Carousel, Container, Row, Col} from 'react-bootstrap';\r\n\r\nimport Menu from \"../../components/menu/index\";\r\nimport Rodape from \"../../components/rodape/index\";\r\n\r\nimport \"./home.css\"\r\n\r\nimport carousel1 from '../../assets/img/Carrousel1.png'\r\nimport carousel2 from \"../../assets/img/Carrousel2.png\";\r\nimport eurekinha from \"../../assets/img/eurekinha.png\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n          <Menu/>\r\n          <Carousel fluid>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src={carousel1}\r\n      alt=\"First slide\"\r\n    />\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src={carousel2}\r\n      alt=\"Second slide\"\r\n    />\r\n\r\n  </Carousel.Item>\r\n\r\n</Carousel>\r\n  \r\n\r\n\r\n\r\n\r\n<Container className=\"container-home\">\r\n\r\n<Row>\r\n    <Col sm={8}><h1 className=\"text-center\">Quem somos?</h1><p>Fazemos conexões, mas acima de tudo, somos a conexão. Somos o elo entre o que você vê por aí e o que você quer enxergar daqui para frente. A ponte entre a sua rotina e as suas ideias. Unimos a experiência profissional e a formação, a especialização e a vivência. Somos o que você lê para se inspirar, todas as regras e as mudanças. Somos a informação que move você, o mercado e o mundo. O conteúdo que comunica, explica e emociona. Somos completos. E completamos. Somos o que faz o mercado pulsar. A inteligência que traz a inovação do amanhã. Fazemos você e os resultados da sua marca crescerem. Juntos. Somos a paixão que faz você manter o brilho nos olhos a cada novo job. Somos o orgulho de ser, somos uma nação. Mais que um lugar qualquer, somos um mundo. O mundo por trás do marketing. Somos Mundo do Marketing. Você conectado com o mercado.</p></Col>\r\n    <Col sm={4}><img style={{width : '400px'} } className=\"img-fluid\" src={eurekinha}></img> </Col>\r\n  </Row>\r\n  </Container>\r\n\r\n\r\n          <Rodape/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Home;","import React, {useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport{ Container, Card, Dropdown, Col, Form, InputGroup, FormControl, FormFile, Spinner, Button, Modal } from 'react-bootstrap';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport {url} from \"../../utils/constants\";\r\nimport {useFormik} from \"formik\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\nimport firebase from \"firebase\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport \"./index.css\";\r\nimport Menu from '../../components/menu';\r\nimport Rodape from '../../components/rodape';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDP-Kaj-XntRALyVe4hslPw_a6uoPzTsCo\",\r\n    authDomain: \"carongo-api.firebaseapp.com\",\r\n    projectId: \"carongo-api\",\r\n    storageBucket: \"carongo-api.appspot.com\",\r\n    messagingSenderId: \"316864397132\",\r\n    appId: \"1:316864397132:web:ff1b376c1b87b421ead9e9\",\r\n    measurementId: \"G-XPSC8L642V\"\r\n  };\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst storage = app.storage();\r\n\r\nconst responsive = {\r\n    desktop: {\r\n        breakpoint: {\r\n            max: 3000,\r\n            min: 1025\r\n        },\r\n        items: 3.3\r\n    },\r\n    laptop: {\r\n        breakpoint: {\r\n            max: 1024,\r\n            min: 769\r\n        },\r\n        items: 2.5\r\n    },\r\n    tabletS: {\r\n        breakpoint: {\r\n            max: 500,\r\n            min: 426\r\n        },\r\n        items: 1.4\r\n    },\r\n    tabletM: {\r\n        breakpoint: {\r\n            max: 650,\r\n            min: 501\r\n        },\r\n        items: 1.75\r\n    },\r\n    tabletL: {\r\n        breakpoint: {\r\n            max: 768,\r\n            min: 651\r\n        },\r\n        items: 2\r\n    },\r\n    mobileS: {\r\n        breakpoint: {\r\n            max: 320,\r\n            min: 0\r\n        },\r\n        items: 1\r\n    },\r\n    mobileM: {\r\n        breakpoint: {\r\n            max: 375,\r\n            min: 321\r\n        },\r\n        items: 1\r\n    },\r\n    mobileL: {\r\n        breakpoint: {\r\n            max: 425,\r\n            min: 376\r\n        },\r\n        items: 1.25\r\n    }\r\n}\r\n\r\nconst Aluno = ({idAluno, nomeAluno, email, dataNascimento, urlFoto, cpf, tipo, listar}) => {\r\n    const {addToast} = useToasts();\r\n    const [showModalAlterarAluno, setShowModalAlterarAluno] = useState(false);\r\n    const [aluno, setAluno] = useState({});\r\n    const handleCloseModalAlterarAluno = () => setShowModalAlterarAluno(false);\r\n    const [idAlunoAlterar, setIdAlunoAlterar] = useState(\"\");\r\n    const handleShowModalAlterarAluno = (id) => {\r\n        setIdAlunoAlterar(id);\r\n        buscar(id)\r\n        setShowModalAlterarAluno(true);\r\n    };\r\n\r\n    const buscar = (id) => {\r\n        fetch(`${url}/aluno/detalhes/${id}`, {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        })\r\n        .then(resultado => resultado.json())\r\n        .then(dados => {\r\n            setAluno(dados.dados);\r\n        })\r\n    } \r\n\r\n    const deletarAluno = async (id) => {\r\n        const response = await fetch(`${url}/aluno/deletar-aluno`, {\r\n            method: \"DELETE\",\r\n            body: JSON.stringify({\r\n                idAluno : id\r\n            }),\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        addToast(data.mensagem, {appearance: \"success\", autoDismiss: true});\r\n        listar();\r\n    }\r\n\r\n    const ModalAlterarAluno = () => {\r\n        const uploadImgAluno = (event) => {\r\n            event.preventDefault();\r\n    \r\n            let image = event.target.files[0];\r\n    \r\n            let nomeImg = criarGuid();\r\n    \r\n            storage.ref(nomeImg).put(image).then(async () => {\r\n                let a = await storage.ref(nomeImg).getDownloadURL();\r\n                formikAlterarAluno.setFieldValue(\"urlFoto\", a);\r\n            });\r\n        }\r\n\r\n        const formikAlterarAluno = useFormik({\r\n            initialValues : {\r\n                Nome : aluno.nome,\r\n                Email : aluno.email,\r\n                DataNascimento: aluno.dataNascimento,\r\n                CPF: aluno.cpf,\r\n                urlFoto: aluno.urlFoto,\r\n                idAluno: idAlunoAlterar\r\n            },\r\n            onSubmit : values => {\r\n                fetch(`${url}/aluno/alterar-aluno`, {\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                        \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                    }\r\n                })\r\n                .then(resultado => resultado.json())\r\n                .then(dados => {\r\n                    console.log(dados)\r\n                    if(dados.sucesso){\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'success',\r\n                            autoDismiss : true\r\n                        });\r\n    \r\n                        formikAlterarAluno.resetForm();\r\n    \r\n                        listar();\r\n                    } \r\n                    else {\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'error',\r\n                            autoDismiss : true\r\n                        })\r\n                    }\r\n                    setShowModalAlterarAluno(false);\r\n                })\r\n            },\r\n            validationSchema : Yup.object().shape({\r\n                Nome: Yup.string()         \r\n                  .min(2, 'O nome deve ter no minimo 3 caracteres')\r\n                  .max(41, 'O nome deve ter no máximo 40 caracteres')\r\n                  .required('Informe um nome'),\r\n                Email: Yup.string()\r\n                  .required('Informe um email'),\r\n                DataNascimento: Yup.string()\r\n                  .required('Informe a data de nascimento'),\r\n                CPF: Yup.string()\r\n                  .required('Informe o CPF'),\r\n            })\r\n        })\r\n\r\n        return (\r\n            <Modal show={showModalAlterarAluno} onHide={handleCloseModalAlterarAluno}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Alterar aluno</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {formikAlterarAluno.values.urlFoto &&<div style={{width: \"150px\", height: \"150px\", backgroundImage: `url(${formikAlterarAluno.values.urlFoto})`, margin: \"auto\", boxShadow: \"inset 2px 2px 5px black, 2px 2px 2px black\", backgroundSize: \"cover\", backgroundPosition: \"50% 50%\"}}></div>}\r\n                            <Form style={{margin: \"20px\", display: \"flex\", justifyContent: \"center\"}}>\r\n                                <FormFile>\r\n                                    <Form.Label htmlFor=\"Aluno\"><p style={{color: \"#0069D9\", cursor: \"pointer\"}}><i className=\"far fa-image\"></i>{ formikAlterarAluno.values.urlFoto === \"\" ? \" Selecionar imagem\": \" Trocar imagem\"}</p></Form.Label>\r\n                                    <Form.File\r\n                                        id=\"Aluno\"\r\n                                        label=\"Imagem do aluno\"\r\n                                        custom\r\n                                        accept=\"image/*\"\r\n                                        style={{display: \"none\"}}\r\n                                        onChange={event => uploadImgAluno(event)}\r\n                                    />\r\n                                </FormFile>\r\n                            </Form>\r\n                            <Form onSubmit={formikAlterarAluno.handleSubmit}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Nome</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        name=\"Nome\" \r\n                                        placeholder=\"Nome\"  \r\n                                        value={formikAlterarAluno.values.Nome} \r\n                                        onChange={formikAlterarAluno.handleChange}\r\n                                        required />\r\n                                        {formikAlterarAluno.errors.Nome && formikAlterarAluno.touched.Nome ? (<div className=\"error\">{formikAlterarAluno.errors.Nome}</div>) : null }\r\n                                </Form.Group>\r\n                                                            \r\n                                <Form.Group>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"Email\"\r\n                                        placeholder=\"Email\" \r\n                                        value={formikAlterarAluno.values.Email} \r\n                                        onChange={formikAlterarAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAlterarAluno.errors.Email && formikAlterarAluno.touched.Email ? (<div className=\"error\">{formikAlterarAluno.errors.Email}</div>) : null }\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Data de Nascimento</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"DataNascimento\"\r\n                                        placeholder=\"Data de nascimento\" \r\n                                        value={formikAlterarAluno.values.DataNascimento} \r\n                                        onChange={formikAlterarAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAlterarAluno.errors.DataNascimento && formikAlterarAluno.touched.DataNascimento ? (<div className=\"error\">{formikAlterarAluno.errors.DataNascimento}</div>) : null }\r\n                                </Form.Group>\r\n                                \r\n                                <Form.Group>\r\n                                    <Form.Label>CPF</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"CPF\"\r\n                                        placeholder=\"CPF\" \r\n                                        value={formikAlterarAluno.values.CPF} \r\n                                        onChange={formikAlterarAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAlterarAluno.errors.CPF && formikAlterarAluno.touched.CPF ? (<div className=\"error\">{formikAlterarAluno.errors.CPF}</div>) : null }\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"light\" onClick={handleCloseModalAlterarAluno}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={formikAlterarAluno.handleSubmit} variant=\"dark\" disabled={formikAlterarAluno.isSubmitting}>{formikAlterarAluno.isSubmitting ? <Spinner animation=\"border\" size=\"sm\" /> : null } Salvar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '14rem', margin: \"auto\" }}>\r\n            <Card.Img variant=\"top\" src={urlFoto} />\r\n            <Card.Body>\r\n                <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                    <Card.Title>{nomeAluno}</Card.Title>\r\n                    {\r\n                        tipo === 1 ?\r\n                        <div>\r\n                            <ModalAlterarAluno/>\r\n                            <i className=\"fas fa-pencil-alt\" style={{color: \"#0069D9\", cursor: \"pointer\"}} onClick={() => handleShowModalAlterarAluno(idAluno)}></i> <i className=\"fas fa-trash-alt\" style={{color: \"red\", cursor: \"pointer\"}} onClick={() => deletarAluno(idAluno)}></i>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <hr></hr>\r\n                <Card.Text>{email}</Card.Text>\r\n                <Card.Text>{dataNascimento}</Card.Text>\r\n                <Card.Text>{cpf}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst Turma = ({idTurma, nomeTurma, alunos, tipo, listar}) => {\r\n    const {addToast} = useToasts();\r\n    const [showModalAluno, setShowModalAluno] = useState(false);\r\n    const handleCloseModalAluno = () => setShowModalAluno(false);\r\n    const [idTurmaAddAluno, setIdTurmaAddLuno] = useState(\"\");\r\n    const handleShowModalAluno = (id) => {\r\n        setShowModalAluno(true);\r\n        setIdTurmaAddLuno(id);\r\n    };\r\n\r\n    const [showModalAlterarTurma, setShowModalAlterarTurma] = useState(false);\r\n    const [turma, setTurma] = useState({});\r\n    const handleCloseModalAlterarTurma = () => setShowModalAlterarTurma(false);\r\n    const [idTurmaAlterar, setIdTurmaAlterar] = useState(\"\");\r\n    const handleShowModalAlterarTurma = (id) => {\r\n        setIdTurmaAlterar(id);\r\n        buscar(id)\r\n        setShowModalAlterarTurma(true);\r\n    };\r\n\r\n    const deletarTurma = async (id) => {\r\n        let resposta = window.confirm(\"Tem certeza de que deseja excluir essa turma? Todos os alunos também serão excluídos!\")\r\n        if(resposta) {\r\n            const response = await fetch(`${url}/turma/deletar-turma`, {\r\n                method: \"DELETE\",\r\n                body: JSON.stringify({\r\n                    idTurma : id\r\n                }),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            addToast(data.mensagem, {appearance: \"success\", autoDismiss: true});\r\n            listar();\r\n        }\r\n    }\r\n\r\n    const ModalAluno = () => {\r\n        const uploadImgAluno = (event) => {\r\n            event.preventDefault();\r\n    \r\n            let image = event.target.files[0];\r\n    \r\n            let nomeImg = criarGuid();\r\n    \r\n            storage.ref(nomeImg).put(image).then(async () => {\r\n                let a = await storage.ref(nomeImg).getDownloadURL();\r\n                formikAluno.setFieldValue(\"urlFoto\", a);\r\n            });\r\n        }\r\n\r\n        const formikAluno = useFormik({\r\n            initialValues : {\r\n                Nome : '',\r\n                Email : '',\r\n                DataNascimento: '',\r\n                CPF: '',\r\n                urlFoto: \"\",\r\n                idTurma: idTurmaAddAluno\r\n            },\r\n            onSubmit : values => {\r\n                fetch(`${url}/turma/adicionar-aluno`, {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                        \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                    }\r\n                })\r\n                .then(resultado => resultado.json())\r\n                .then(dados => {\r\n                    if(dados.sucesso){\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'success',\r\n                            autoDismiss : true\r\n                        });\r\n    \r\n                        formikAluno.resetForm();\r\n    \r\n                        listar();\r\n                    } \r\n                    else {\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'error',\r\n                            autoDismiss : true\r\n                        })\r\n                    }\r\n                    setShowModalAluno(false);\r\n                })\r\n            },\r\n            validationSchema : Yup.object().shape({\r\n                Nome: Yup.string()         \r\n                  .min(2, 'O nome deve ter no minimo 3 caracteres')\r\n                  .max(41, 'O nome deve ter no máximo 40 caracteres')\r\n                  .required('Informe um nome'),\r\n                Email: Yup.string()\r\n                  .required('Informe um email'),\r\n                DataNascimento: Yup.string()\r\n                  .required('Informe a data de nascimento'),\r\n                CPF: Yup.string()\r\n                  .required('Informe o CPF'),\r\n            })\r\n        })\r\n\r\n        return (\r\n            <Modal show={showModalAluno} onHide={handleCloseModalAluno}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Adicionar aluno</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {formikAluno.values.urlFoto &&<div style={{width: \"150px\", height: \"150px\", backgroundImage: `url(${formikAluno.values.urlFoto})`, margin: \"auto\", boxShadow: \"inset 2px 2px 5px black, 2px 2px 2px black\", backgroundSize: \"cover\", backgroundPosition: \"50% 50%\"}}></div>}\r\n                            <Form style={{margin: \"20px\", display: \"flex\", justifyContent: \"center\"}}>\r\n                                <FormFile>\r\n                                    <Form.Label htmlFor=\"Aluno\"><p style={{color: \"#0069D9\", cursor: \"pointer\"}}><i className=\"far fa-image\"></i>{ formikAluno.values.urlFoto === \"\" ? \" Selecionar imagem\": \" Trocar imagem\"}</p></Form.Label>\r\n                                    <Form.File\r\n                                        id=\"Aluno\"\r\n                                        label=\"Imagem do aluno\"\r\n                                        custom\r\n                                        accept=\"image/*\"\r\n                                        style={{display: \"none\"}}\r\n                                        onChange={event => uploadImgAluno(event)}\r\n                                    />\r\n                                </FormFile>\r\n                            </Form>\r\n                            <Form onSubmit={formikAluno.handleSubmit}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Nome</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        name=\"Nome\" \r\n                                        placeholder=\"Nome\"  \r\n                                        value={formikAluno.values.Nome} \r\n                                        onChange={formikAluno.handleChange}\r\n                                        required />\r\n                                        {formikAluno.errors.Nome && formikAluno.touched.Nome ? (<div className=\"error\">{formikAluno.errors.Nome}</div>) : null }\r\n                                </Form.Group>\r\n                                                            \r\n                                <Form.Group>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"Email\"\r\n                                        placeholder=\"Email\" \r\n                                        value={formikAluno.values.Email} \r\n                                        onChange={formikAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAluno.errors.Email && formikAluno.touched.Email ? (<div className=\"error\">{formikAluno.errors.Email}</div>) : null }\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Data de Nascimento</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"DataNascimento\"\r\n                                        placeholder=\"Data de nascimento\" \r\n                                        value={formikAluno.values.DataNascimento} \r\n                                        onChange={formikAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAluno.errors.DataNascimento && formikAluno.touched.DataNascimento ? (<div className=\"error\">{formikAluno.errors.DataNascimento}</div>) : null }\r\n                                </Form.Group>\r\n                                \r\n                                <Form.Group>\r\n                                    <Form.Label>CPF</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"  \r\n                                        name=\"CPF\"\r\n                                        placeholder=\"CPF\" \r\n                                        value={formikAluno.values.CPF} \r\n                                        onChange={formikAluno.handleChange}  \r\n                                        required />\r\n                                    {formikAluno.errors.CPF && formikAluno.touched.CPF ? (<div className=\"error\">{formikAluno.errors.CPF}</div>) : null }\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"light\" onClick={handleCloseModalAluno}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={formikAluno.handleSubmit} variant=\"dark\" disabled={formikAluno.isSubmitting}>{formikAluno.isSubmitting ? <Spinner animation=\"border\" size=\"sm\" /> : null } Salvar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const buscar = (id) => {\r\n        fetch(`${url}/turma/detalhes/${id}`, {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        })\r\n        .then(resultado => resultado.json())\r\n        .then(dados => {\r\n            setTurma(dados.dados);\r\n        })\r\n    } \r\n\r\n    const ModalAlterarTurma = () => {\r\n        const formikAlterarTurma = useFormik({\r\n            initialValues : {\r\n                Nome : turma.nome,\r\n                idTurma: idTurmaAlterar\r\n            },\r\n            onSubmit : values => {\r\n                fetch(`${url}/turma/alterar-turma`, {\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                        \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                    }\r\n                })\r\n                .then(resultado => resultado.json())\r\n                .then(dados => {\r\n                    console.log(dados)\r\n                    if(dados.sucesso){\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'success',\r\n                            autoDismiss : true\r\n                        });\r\n    \r\n                        formikAlterarTurma.resetForm();\r\n    \r\n                        listar();\r\n                    } \r\n                    else {\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'error',\r\n                            autoDismiss : true\r\n                        })\r\n                    }\r\n                    setShowModalAlterarTurma(false);\r\n                })\r\n            },\r\n            validationSchema : Yup.object().shape({\r\n                Nome: Yup.string()         \r\n                  .min(2, 'O nome deve ter no minimo 3 caracteres')\r\n                  .max(41, 'O nome deve ter no máximo 40 caracteres')\r\n                  .required('Informe um nome')\r\n            })\r\n        })\r\n\r\n        return (\r\n            <Modal show={showModalAlterarTurma} onHide={handleCloseModalAlterarTurma}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Alterar turma</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Form onSubmit={formikAlterarTurma.handleSubmit}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Nome</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        name=\"Nome\" \r\n                                        placeholder=\"Nome\"  \r\n                                        value={formikAlterarTurma.values.Nome} \r\n                                        onChange={formikAlterarTurma.handleChange}\r\n                                        required />\r\n                                        {formikAlterarTurma.errors.Nome && formikAlterarTurma.touched.Nome ? (<div className=\"error\">{formikAlterarTurma.errors.Nome}</div>) : null }\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"light\" onClick={handleCloseModalAlterarTurma}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={formikAlterarTurma.handleSubmit} variant=\"dark\" disabled={formikAlterarTurma.isSubmitting}>{formikAlterarTurma.isSubmitting ? <Spinner animation=\"border\" size=\"sm\" /> : null } Salvar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{margin: \"50px 0\"}}>\r\n            <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                <h2 style={{marginRight: \"20px\"}}>{nomeTurma}</h2>\r\n                {\r\n                    tipo === 1 ?\r\n                    <div>\r\n                        <ModalAluno/>\r\n                        <i className=\"fas fa-pencil-alt\" style={{color: \"#0069D9\", cursor: \"pointer\"}} onClick={() => handleShowModalAlterarTurma(idTurma)}></i> <i className=\"fas fa-trash-alt\" style={{color: \"red\", cursor: \"pointer\"}} onClick={() => deletarTurma(idTurma)}></i> <i className=\"fas fa-plus\" style={{color: \"green\", cursor: \"pointer\"}} onClick={() => handleShowModalAluno(idTurma)}></i>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n            <Card>\r\n            <ModalAlterarTurma/>\r\n                <Card.Body>\r\n                    {\r\n                        alunos !== undefined && alunos.length > 0 ?\r\n                        <Carousel minimumTouchDrag={0} responsive={responsive} draggable={false} removeArrowOnDeviceType={[\"mobileL\", \"mobileS\", \"mobileLM\"]}>\r\n                        {\r\n                            alunos.map((aluno, index) => {\r\n                                return <Aluno idAluno={aluno.idAluno} nomeAluno={aluno.nomeAluno} email={aluno.email} dataNascimento={aluno.dataNascimento} urlFoto={aluno.urlFoto} cpf={aluno.cpf} tipo={tipo} listar={listar} key={index}/>\r\n                            })\r\n                        }\r\n                        </Carousel>\r\n                        :\r\n                        alunos.length === 0 ?\r\n                        <p>Essa turma ainda não tem alunos</p>\r\n                        :\r\n                        null\r\n                    }\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DetalhesDaInstituicao = () => {\r\n    const {idInstituicao} = useParams();\r\n    const history = useHistory();\r\n    const [turmas, setTurmas] = useState([]);\r\n    const [urlImagemFiltro, setUrlImagemFiltro] = useState(\"\");\r\n    const {addToast} = useToasts();\r\n    const [msg, setMsg] = useState(\"\")\r\n\r\n    const [showModalCriarTurma, setShowModalCriarTurma] = useState(false);\r\n    const handleCloseModalCriarTurma = () => setShowModalCriarTurma(false);\r\n    const handleShowModalCriarTurma = () => setShowModalCriarTurma(true);\r\n\r\n    const ModalCriarTurma = () => {\r\n        const formikCriarTurma = useFormik({\r\n            initialValues : {\r\n                Nome : '',\r\n                idInstituicao: idInstituicao\r\n            },\r\n            onSubmit : values => {\r\n                fetch(`${url}/instituicao/adicionar-turma`, {\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                        \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                    }\r\n                })\r\n                .then(resultado => resultado.json())\r\n                .then(dados => {\r\n                    if(dados.sucesso){\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'success',\r\n                            autoDismiss : true\r\n                        });\r\n    \r\n                        formikCriarTurma.resetForm();\r\n    \r\n                        listar();\r\n                    } \r\n                    else {\r\n                        addToast(dados.mensagem, {\r\n                            appearance : 'error',\r\n                            autoDismiss : true\r\n                        })\r\n                    }\r\n                    setShowModalCriarTurma(false);\r\n                })\r\n            },\r\n            validationSchema : Yup.object().shape({\r\n                Nome: Yup.string()         \r\n                  .min(2, 'O nome deve ter no minimo 3 caracteres')\r\n                  .max(41, 'O nome deve ter no máximo 30 caracteres')\r\n                  .required('Informe um nome')\r\n            })\r\n        })\r\n\r\n        return (\r\n            <Modal show={showModalCriarTurma} onHide={handleCloseModalCriarTurma}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Adicionar Turma</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Form onSubmit={formikCriarTurma.handleSubmit}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Nome</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        name=\"Nome\" \r\n                                        placeholder=\"Nome\"  \r\n                                        value={formikCriarTurma.values.Nome} \r\n                                        onChange={formikCriarTurma.handleChange}\r\n                                        required />\r\n                                        {formikCriarTurma.errors.Nome && formikCriarTurma.touched.Nome ? (<div className=\"error\">{formikCriarTurma.errors.Nome}</div>) : null }\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"light\" onClick={handleCloseModalCriarTurma}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={formikCriarTurma.handleSubmit} variant=\"dark\" disabled={formikCriarTurma.isSubmitting}>{formikCriarTurma.isSubmitting ? <Spinner animation=\"border\" size=\"sm\" /> : null } Salvar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        listar();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        filtrarPorImagem();\r\n    }, [urlImagemFiltro])\r\n\r\n    const filtrarPorImagem = async () => {\r\n        const response = await fetch(`${url}/instituicao/listar-detalhes-da-instituicao/${idInstituicao}/urlimagem/${urlImagemFiltro.replaceAll(\"/\", \"barra\").replaceAll(\"?\", \"interrogacao\")}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        });\r\n        const data = await response.json();\r\n\r\n        if(data.dados != undefined)\r\n            setTurmas(data.dados);\r\n        else {\r\n            addToast(data.mensagem, {appearance: \"error\", autoDismiss: true});\r\n            setUrlImagemFiltro(\"\");\r\n        }\r\n    }\r\n\r\n    const upload = (event) => {\r\n        event.preventDefault();\r\n\r\n        let image = event.target.files[0];\r\n\r\n        let nomeImg = criarGuid();\r\n\r\n        console.log(image)\r\n\r\n        storage.ref(nomeImg).put(image).then(async () => {\r\n            let a = await storage.ref(nomeImg).getDownloadURL();\r\n            setUrlImagemFiltro(a);\r\n            console.log(urlImagemFiltro);\r\n        });\r\n    }\r\n\r\n    const sairDaInstituicao = async () => {\r\n        let resposta = window.confirm(\"Tem certeza de que deseja sair da instituição?\");\r\n        if(resposta) {\r\n            const response = await fetch(`${url}/instituicao/sair-da-instituicao`, {\r\n                method: \"PUT\",\r\n                body: JSON.stringify({\r\n                    idInstituicao: idInstituicao\r\n                }),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            });\r\n            const data = response.json();\r\n            if(data.sucesso) {\r\n                addToast(data.mensagem, {appearance: \"success\", autoDismiss: true});\r\n                history.push(\"/minhas-instituicoes\");\r\n            }\r\n            else{\r\n                addToast(data.mensagem, {appearance: \"error\", autoDismiss: true});\r\n            }\r\n        }  \r\n    }\r\n\r\n    const deletarInstituicao = async () => {\r\n        let resposta = window.confirm(\"Tem certeza de que deseja deletar a instituição? Tudo que ela contempla será deletado junto com ela!\");\r\n        if(resposta) {\r\n            const response = await fetch(`${url}/instituicao/deletar-instituicao`, {\r\n                method: \"DELETE\",\r\n                body: JSON.stringify({\r\n                    idInstituicao: idInstituicao\r\n                }),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            });\r\n            const data = response.json();\r\n            if(data.sucesso) {\r\n                addToast(data.mensagem, {appearance: \"success\", autoDismiss: true});\r\n                history.push(\"/minhas-instituicoes\");\r\n            }\r\n            else{\r\n                addToast(data.mensagem, {appearance: \"error\", autoDismiss: true});\r\n            }\r\n        }  \r\n    }\r\n\r\n    const listar = async () => {\r\n        const response = await fetch(`${url}/instituicao/listar-detalhes-da-instituicao/${idInstituicao}/nome/`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        });\r\n        const data = await response.json();\r\n\r\n        setMsg(data.mensagem)\r\n        if(data.dados != undefined) {\r\n            setTurmas(data.dados);\r\n        }\r\n        else \r\n            addToast(data.mensagem, {appearance: \"error\", autoDismiss: true});\r\n    }\r\n\r\n    const formikFiltroPorNome = useFormik({\r\n        initialValues: {\r\n            nome: \"\"\r\n        },\r\n        onSubmit: (values) => {\r\n            fetch(`${url}/instituicao/listar-detalhes-da-instituicao/${idInstituicao}/nome/${values.nome}`, {\r\n                headers: {\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.dados != undefined)\r\n                    setTurmas(data.dados);\r\n                else \r\n                    addToast(data.mensagem, {appearance: \"error\", autoDismiss: true});\r\n            });\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Menu idInstituicao={idInstituicao} pagina=\"Detalhes\"/>\r\n            <Container style={{width: \"95vw\", marginTop: \"25px\", minHeight: \"90vh\"}}>\r\n            <div style={{textAlign: \"right\"}}>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\r\n                        <i className=\"fas fa-ellipsis-v\" style={{fontSize: \"20px\"}}></i><i className=\"fas fa-ellipsis-v\" style={{fontSize: \"20px\"}}></i><i className=\"fas fa-ellipsis-v\" style={{fontSize: \"20px\"}}></i>\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        {\r\n                            turmas.tipo === 1 ?\r\n                            <>\r\n                                <Dropdown.Header style={{color: \"black\"}}><i className=\"fas fa-cog\"></i> Configurações da instituição</Dropdown.Header>\r\n                                <ModalCriarTurma/>\r\n                                <Dropdown.Item onClick={handleShowModalCriarTurma}>Adicionar turma</Dropdown.Item>\r\n                                <hr></hr>\r\n                            </>\r\n                            :\r\n                            null\r\n                        }\r\n                        <Dropdown.Header style={{color: \"red\"}}><i className=\"fas fa-skull\"></i> Área de risco</Dropdown.Header>\r\n                        <Dropdown.Item style={{color: \"red\"}} onClick={() => sairDaInstituicao()}>Sair da instituição</Dropdown.Item>\r\n                        {\r\n                            turmas.tipo === 1 ?\r\n                            <Dropdown.Item style={{color: \"red\"}} onClick={() => deletarInstituicao()}>Deletar instituição</Dropdown.Item>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n                <Form style={{marginTop: \"50px\"}}> \r\n                    <Form.Row className=\"align-items-center justify-content-center\">\r\n                        <Col xs=\"auto\">\r\n                            <InputGroup className=\"mb-2\">\r\n                                <FormControl id=\"inlineFormInputGroup\" name=\"nome\" placeholder=\"Pesquisar por nome...\" value={formikFiltroPorNome.values.nome} onChange={formikFiltroPorNome.handleChange}/>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text style={{cursor: \"pointer\"}} onClick={formikFiltroPorNome.handleSubmit}>\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                <p style={{textAlign: \"center\"}}>Ou...</p>\r\n                <p style={{textAlign: \"center\"}}>Por reconhecimento facial</p>\r\n                {urlImagemFiltro &&<div style={{width: \"150px\", height: \"150px\", backgroundImage: `url(${urlImagemFiltro})`, margin: \"auto\", boxShadow: \"inset 2px 2px 5px black, 2px 2px 2px black\", backgroundSize: \"cover\", backgroundPosition: \"50% 50%\"}}></div>}\r\n                <Form style={{margin: \"20px\", display: \"flex\", justifyContent: \"center\"}}>\r\n                    <FormFile>\r\n                        <Form.Label htmlFor=\"fileAluno\"><p style={{color: \"#0069D9\", cursor: \"pointer\"}}><i className=\"far fa-image\"></i>{ urlImagemFiltro === \"\" ? \" Selecionar imagem\": \" Trocar imagem\"}</p></Form.Label>\r\n                        <Form.File\r\n                            id=\"fileAluno\"\r\n                            label=\"Imagem do aluno\"\r\n                            custom\r\n                            accept=\"image/*\"\r\n                            style={{display: \"none\"}}\r\n                            onChange={event => upload(event)}\r\n                        />\r\n                    </FormFile>\r\n                </Form>\r\n                {\r\n                    turmas.turmas !== undefined && turmas.turmas.length > 1 && urlImagemFiltro !== \"\"?\r\n                    <div style={{width: \"83vw\", display: \"flex\", justifyContent: \"center\"}}>\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </div>:\r\n                    turmas.turmas !== undefined\r\n                    ?\r\n                    turmas.turmas.map((turma, index) => {\r\n                        return <Turma idTurma={turma.idTurma} nomeTurma={turma.nomeTurma} alunos={turma.alunos} tipo={turmas.tipo} listar={listar} key={index}/>\r\n                    })\r\n                    :\r\n                    msg === \"Esta instituição ainda está vazia!\" ?\r\n                    <h4 style={{textAlign: \"center\", marginTop: \"50px\"}}>Essa instituição ainda está vazia!</h4>\r\n                    :\r\n                    <div style={{width: \"83vw\", display: \"flex\", justifyContent: \"center\"}}>\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </div>\r\n                }\r\n            </Container>\r\n            <Rodape/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst criarGuid = () => {\r\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n    );\r\n}\r\n\r\nexport default DetalhesDaInstituicao;","import React, {useState, useEffect} from \"react\";\r\nimport {Container, ListGroup, Spinner, Form, Col, InputGroup, FormControl} from \"react-bootstrap\";\r\nimport { useParams } from \"react-router\";\r\nimport {url} from \"../../utils/constants\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\nimport Menu from \"../../components/menu/index\"\r\nimport Rodape from \"../../components/rodape/index\"\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst Pessoa = ({id, idUI, nome, meuId, adm, idInstituicao, listar}) => {\r\n    const {addToast} = useToasts();\r\n\r\n    const expulsarColaborador = async (idUI) => {\r\n        let resposta = window.confirm(\"Tem certeza de que deseja expulsar este colaborador?\");\r\n        if(resposta) {\r\n            fetch(`${url}/instituicao/expulsar-colaborador`, {\r\n                method: \"DELETE\",\r\n                body: JSON.stringify({\r\n                    idUsuarioInstituicao: idUI,\r\n                    idInstituicao: idInstituicao\r\n                }),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                if(dados.sucesso){\r\n                    addToast(dados.mensagem, {\r\n                        appearance : 'success',\r\n                        autoDismiss : true\r\n                    });\r\n                    listar();\r\n                } \r\n                else {\r\n                    addToast(dados.mensagem, {\r\n                        appearance : 'error',\r\n                        autoDismiss : true\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ListGroup.Item style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\"}}>\r\n            <div style={{display: \"flex\"}}>\r\n                <div>\r\n                    <div style={{height: \"40px\", width: \"40px\", background: id === meuId ? \"#5C6BC0\": \"#fa6c09\", borderRadius: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", fontWeight: \"bolder\", color: \"white\", marginRight: \"10px\"}}>\r\n                        {nome.substring(0, 1).toUpperCase()}\r\n                    </div>\r\n                </div>\r\n                <p style={{margin: \"0\", display: \"flex\", alignItems: \"center\"}}>{ id === meuId ? \"Eu\" : nome}</p>\r\n            </div>\r\n            {\r\n                adm\r\n                && \r\n                <div >\r\n                    <i className=\"fas fa-trash-alt\" style={{color: \"red\", cursor: \"pointer\"}} onClick={() => expulsarColaborador(idUI)}></i>\r\n                </div>\r\n            }\r\n            \r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nconst PessoasDaInstituicao = () => {\r\n    const {addToast} = useToasts();\r\n    const {idInstituicao} = useParams();\r\n    const [pessoas, setPessoas] = useState([]);\r\n    const [adm, setAdm] = useState(false);\r\n    const [meuId, setMeuId] = useState(\"\");\r\n    const [emailUsuario, setEmailUsuario] = useState(\"\");\r\n\r\n    const listar = async () => {\r\n        setMeuId(jwt_decode(localStorage.getItem(\"token-carongo\")).jti);\r\n\r\n        const response = await fetch(`${url}/instituicao/listar-pessoas-da-instituicao/${idInstituicao}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        });\r\n        const data = await response.json();\r\n\r\n        setAdm(data.dados.administradores.find(u => u.id === meuId) !== undefined ? true : false);\r\n        \r\n        setPessoas(data.dados);\r\n    }\r\n\r\n    useEffect(() => {\r\n        listar();\r\n    }, [meuId])\r\n\r\n    const adicionarAdministrador = async (email) => {\r\n        const response = await fetch(`${url}/instituicao/adicionar-administrador`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n                idInstituicao: idInstituicao,\r\n                email: email,\r\n                idUsuario: meuId\r\n            }),\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        });\r\n        const dados = await response.json();\r\n\r\n        console.log(dados)\r\n\r\n        if(dados.sucesso){\r\n            addToast(dados.mensagem, {\r\n                appearance : 'success',\r\n                autoDismiss : true\r\n            });\r\n            listar();\r\n        } \r\n        else {\r\n            addToast(dados.mensagem, {\r\n                appearance : 'error',\r\n                autoDismiss : true\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu pagina=\"Pessoas\" idInstituicao={idInstituicao}/>\r\n            {\r\n                adm && <>\r\n                    <Form style={{marginTop: \"50px\"}}> \r\n                        <Form.Row className=\"align-items-center justify-content-center\">\r\n                            <Col xs=\"auto\">\r\n                                <p style={{textAlign: \"center\"}}>Adicionar administrador</p>\r\n                                <InputGroup className=\"mb-2\">\r\n                                    <FormControl id=\"inlineFormInputGroup\" name=\"nome\" placeholder=\"Email\" value={emailUsuario} onChange={event => setEmailUsuario(event.target.value)}/>\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text style={{cursor: \"pointer\"}} onClick={() => adicionarAdministrador(emailUsuario)}>\r\n                                            <i className=\"fas fa-plus\"></i>\r\n                                        </InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                </InputGroup>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form>\r\n                    <p style={{textAlign: \"center\"}}>Convide colaboradores com o código: <span style={{color: \"#0069d9\", fontWeight: \"bolder\"}}>{pessoas.codigo}</span></p>\r\n                </>\r\n            }\r\n            <Container style={{width: \"90%\"}}>\r\n                {\r\n                    pessoas.colaboradores !== undefined && pessoas.administradores !== undefined?\r\n                        <div>\r\n                            <h2 style={{marginTop: \"50px\"}}>Administradores</h2>\r\n                            <ListGroup variant=\"flush\">\r\n                                <Container fluid>\r\n                                    {\r\n                                        pessoas.administradores.map((administrador, index) => {\r\n                                            return <Pessoa id={administrador.id} nome={administrador.nome} meuId={meuId} key={index}/>\r\n                                        })\r\n                                    }\r\n                                </Container>\r\n                            </ListGroup>\r\n                            <h2 style={{marginTop: \"50px\"}}>Colaboradores</h2>\r\n                            <ListGroup variant=\"flush\">\r\n                                <Container fluid>\r\n                                    {\r\n                                        pessoas.colaboradores.length > 0 ?\r\n                                        pessoas.colaboradores.map((colaborador, index) => {\r\n                                            return <Pessoa id={colaborador.id} idUI={colaborador.idUsuarioInstituicao} nome={colaborador.nome} meuId={meuId} adm={adm} idInstituicao={idInstituicao} listar={listar} key={index}/>\r\n                                        })\r\n                                        :\r\n                                        <p>Essa instituição ainda não tem nenhum colaborador!</p>\r\n                                    }\r\n                                </Container>\r\n                            </ListGroup>\r\n                        </div>\r\n                    :\r\n                    <div style={{width: \"83vw\", display: \"flex\", justifyContent: \"center\"}}>\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </div>\r\n                }\r\n            </Container>\r\n            <Rodape/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PessoasDaInstituicao;","import React, {useEffect, useState} from \"react\";\r\nimport {url} from \"../../utils/constants\";\r\nimport {InputGroup, Container, Dropdown, Col, Form, FormControl, Spinner, Row, Card, Modal, Button} from \"react-bootstrap\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\nimport Menu from \"../../components/menu/index\";\r\nimport Rodape from \"../../components/rodape/index\"\r\nconst Instituicao = ({id, nome, descricao, tipoUsuario}) => {\r\n    return (\r\n        <Card style={{ width: '18rem', margin: \"20px auto\" }}>\r\n            <Card.Body>\r\n                <Card.Title>{nome}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">Cargo: {tipoUsuario}</Card.Subtitle>\r\n                <Card.Text>\r\n                    {descricao}\r\n                </Card.Text>\r\n                <Card.Link href={`/Carongo-Web/detalhes-da-instituicao/${id}`}>Ver detalhes</Card.Link>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst MinhasInstituicoes = () => {\r\n    const [nome, setNome] = useState(\"\");\r\n    const [instituicoes, setInstituicoes] = useState([]);\r\n    const {addToast} = useToasts();\r\n    const [msg, setMsg] = useState(\"\");\r\n\r\n    const [showModalCriarInstituicao, setShowModalCriarInstituicao] = useState(false);\r\n    const handleCloseModalCriarInstituicao = () => setShowModalCriarInstituicao(false);\r\n    const handleShowModalCriarInstituicao = () => setShowModalCriarInstituicao(true);\r\n\r\n    const [showModalEntrarNaInstituicao, setShowModalEntrarNaInstituicao] = useState(false);\r\n    const handleCloseModalEntrarNaInstituicao = () => setShowModalEntrarNaInstituicao(false);\r\n    const handleShowModalEntrarNaInstituicao = () => setShowModalEntrarNaInstituicao(true);\r\n\r\n    const ModalCriarInstituicao = () => {\r\n        const [nomeInstituicao, setNomeInstituicao] = useState(\"\");\r\n        const [descricaoInstituicao, setDescricaoInstituicao] = useState(\"\");\r\n\r\n        const criarInstituicao = async () => {\r\n            const response = await fetch(`${url}/instituicao/criar-instituicao`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    nome: nomeInstituicao,\r\n                    descricao: descricaoInstituicao\r\n                }),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            })\r\n\r\n            const dados = await response.json()\r\n            \r\n            if(dados.sucesso){\r\n                addToast(dados.mensagem, {\r\n                    appearance : 'success',\r\n                    autoDismiss : true\r\n                });\r\n                listar();\r\n                handleCloseModalCriarInstituicao();\r\n            } \r\n            else {\r\n                addToast(dados.mensagem, {\r\n                    appearance : 'error',\r\n                    autoDismiss : true\r\n                })\r\n            }\r\n        }\r\n\r\n        return <Modal show={showModalCriarInstituicao} onHide={handleCloseModalCriarInstituicao}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Adicionar Instituicao</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label>Nome</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"Nome\" \r\n                                    placeholder=\"Nome\"  \r\n                                    value={nomeInstituicao} \r\n                                    onChange={event => setNomeInstituicao(event.target.value)}\r\n                                    required />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Descrição</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"Descrição\" \r\n                                    placeholder=\"Descrição\"  \r\n                                    value={descricaoInstituicao} \r\n                                    onChange={event => setDescricaoInstituicao(event.target.value)}\r\n                                    required />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"light\" onClick={handleCloseModalCriarInstituicao}>\r\n                    Cancelar\r\n                </Button>\r\n                <Button type=\"submit\" onClick={() => criarInstituicao()} variant=\"dark\"> Salvar</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    }\r\n\r\n    const ModalEntrarNaInstituicao = () => {\r\n        const [codigo, setCodigo] = useState(\"\");\r\n\r\n        const entrarNaInstituicao = async () => {\r\n            const response = await fetch(`${url}/instituicao/entrar-na-instituicao`, {\r\n                method: \"PUT\",\r\n                body: JSON.stringify({\r\n                    codigo: codigo\r\n                }),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n                }\r\n            })\r\n\r\n            const dados = await response.json()\r\n            \r\n            if(dados.sucesso){\r\n                addToast(dados.mensagem, {\r\n                    appearance : 'success',\r\n                    autoDismiss : true\r\n                });\r\n                listar();\r\n                handleCloseModalEntrarNaInstituicao();\r\n            } \r\n            else {\r\n                addToast(dados.mensagem, {\r\n                    appearance : 'error',\r\n                    autoDismiss : true\r\n                })\r\n            }\r\n        }\r\n\r\n        return <Modal show={showModalEntrarNaInstituicao} onHide={handleCloseModalEntrarNaInstituicao}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Entrar na instituicao</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label>Codigo</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"Codigo\" \r\n                                    placeholder=\"Codigo\"  \r\n                                    value={codigo} \r\n                                    onChange={event => setCodigo(event.target.value)}\r\n                                    required />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"light\" onClick={handleCloseModalEntrarNaInstituicao}>\r\n                    Cancelar\r\n                </Button>\r\n                <Button type=\"submit\" onClick={() => entrarNaInstituicao()} variant=\"dark\"> Salvar</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    }\r\n\r\n    useEffect(() => {\r\n        listar()\r\n    }, [nome])\r\n\r\n    const listar = async () => {\r\n        const response = await fetch(`${url}/instituicao/listar-minhas-instituicoes/${nome !== null ? nome : null}`, {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"authorization\": `Bearer ${localStorage.getItem(\"token-carongo\")}`\r\n            }\r\n        })\r\n        const data = await response.json();\r\n\r\n        if(!data.sucesso)\r\n            addToast(data.mensagem, {\r\n                appearance : 'error',\r\n                autoDismiss : true\r\n            })\r\n        else{\r\n            setMsg(data.mensagem)\r\n            setInstituicoes(data)\r\n        }\r\n            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu/>\r\n            <Container style={{width: \"95vw\", marginTop: \"25px\", minHeight: \"90vh\"}}>\r\n                <div style={{textAlign: \"right\"}}>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\r\n                            <i className=\"fas fa-ellipsis-v\" style={{fontSize: \"20px\"}}></i><i className=\"fas fa-ellipsis-v\" style={{fontSize: \"20px\"}}></i><i className=\"fas fa-ellipsis-v\" style={{fontSize: \"20px\"}}></i>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <ModalCriarInstituicao/>\r\n                            <Dropdown.Item onClick={handleShowModalCriarInstituicao}>Criar instituição</Dropdown.Item>\r\n                            <ModalEntrarNaInstituicao/>\r\n                            <Dropdown.Item onClick={handleShowModalEntrarNaInstituicao}>Entrar em uma instituição</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <Form style={{marginTop: \"50px\"}}> \r\n                    <Form.Row className=\"align-items-center justify-content-center\">\r\n                        <Col xs=\"auto\">\r\n                            <InputGroup className=\"mb-2\">\r\n                                <FormControl id=\"inlineFormInputGroup\" name=\"nome\" placeholder=\"Pesquisar por nome...\" value={nome} onChange={event => setNome(event.target.value)}/>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                <hr></hr>\r\n                <Container fluid>\r\n                    <Row style={{display: \"flex\", flexWrap: \"wrap\"}}>\r\n                        {\r\n                            msg ===\"Você não faz parte de nenhuma instituição!\"?\r\n                            <div style={{width: \"100%\", marginTop: 25}}>\r\n                                \r\n                            <h3 style={{textAlign: \"center\"}}>Você ainda não faz parte de nenhuma instituição!</h3>\r\n                            </div>:\r\n                            instituicoes.dados === undefined?\r\n                            <div style={{width: \"83vw\", display: \"flex\", justifyContent: \"center\"}}>\r\n                                <Spinner animation=\"border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </Spinner>\r\n                            </div>\r\n                            \r\n                            :\r\n                            instituicoes.dados.map((instituicao, index) => {\r\n                                return <Instituicao id={instituicao.id} nome={instituicao.nome} descricao={instituicao.descricao} tipoUsuario={instituicao.tipoUsuario}/>\r\n                            })\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n                <Rodape/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MinhasInstituicoes;","import React, { useState } from 'react';\r\nimport './redefinir-senha.css';\r\nimport Rodape from '../../components/rodape';\r\nimport Menu from '../../components/menu'\r\nimport {useParams} from \"react-router-dom\"\r\nimport {useToasts} from \"react-toast-notifications\";\r\nimport {url} from \"../../utils/constants\";\r\nimport {  Button, Container, Jumbotron, Form } from 'react-bootstrap';\r\n\r\nconst Redefinir =()=>{\r\n    const {addToast} = useToasts();\r\n    const [senha, setSenha] = useState('');\r\n    const {jwt} = useParams();\r\n\r\n    const redefinicao = (event) => {\r\n        event.preventDefault();\r\n        fetch(`${url}/conta/redefinir-senha`,{\r\n            method : 'PUT',\r\n            body : JSON.stringify({\r\n                senha : senha,\r\n                token: jwt\r\n            }),\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }\r\n        })\r\n        .then(resposta => resposta.json())\r\n        .then(dados => {\r\n            if(dados.sucesso){\r\n                addToast(dados.mensagem, {\r\n                    appearance : 'success',\r\n                    autoDismiss : true\r\n                });\r\n            } \r\n            else {\r\n                addToast(dados.mensagem, {\r\n                    appearance : 'error',\r\n                    autoDismiss : true\r\n                })\r\n            }\r\n        })\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Menu />\r\n              <Container className=\"cont\" style={{minHeight: \"75vh\"}}>\r\n\r\n       <Jumbotron  className='jumb'>\r\n         <div className='text-center' >\r\n         <h1 className=\"text-center\">\r\n           Redefinir senha\r\n         </h1>\r\n\r\n         </div>\r\n       <Form >\r\n\r\n       <Form.Group controlId=\"formBasicEmail\">\r\n       <Form.Label>Senha</Form.Label>\r\n       <Form.Control value={senha} onChange={event=> setSenha(event.target.value)}  placeholder=\"Digite sua nova senha\" />\r\n       </Form.Group>\r\n\r\n       <Button onClick={event => redefinicao(event)} className='button' variant=\"dark\" type=\"submit\">\r\n       Redefinir\r\n       </Button>\r\n       </Form>\r\n\r\n       </Jumbotron>\r\n\r\n\r\n\r\n       </Container>\r\n            <Rodape />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Redefinir; ","import React, { useState } from 'react';import Menu from '../../components/menu';\r\nimport Rodape from '../../components/rodape';\r\nimport { useHistory } from 'react-router-dom';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {Container, Form, Jumbotron, Button} from 'react-bootstrap';\r\nimport {useToasts} from \"react-toast-notifications\";\r\n\r\nconst EsqueciaSenha =()=>{\r\n    const {addToast} = useToasts();\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n\r\n    const Recuperar =(event)=>{\r\n\r\n    event.preventDefault();\r\n    console.log(email);\r\n\r\n    fetch('http://localhost:5000/conta/solicitar-nova-senha', {\r\n            method : 'POST',\r\n            body : JSON.stringify({\r\n                email : email,\r\n            }),\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }\r\n    })\r\n    .then(response => response.json())\r\n    .then(dados => {\r\n        if(dados.sucesso){\r\n            addToast(dados.mensagem, {\r\n                appearance : 'success',\r\n                autoDismiss : true\r\n            });\r\n\r\n        } \r\n        else {\r\n            addToast(dados.mensagem, {\r\n                appearance : 'error',\r\n                autoDismiss : true\r\n            })\r\n        }\r\n    })\r\n    .catch(err => console.error(err));\r\n\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    return(\r\n        <div>\r\n            <Menu />\r\n           \r\n                <Container className=\"jumb\" style={{minHeight: \"75vh\"}}>\r\n                <Jumbotron className=\"text-center\">\r\n                     <Form >\r\n                         <h1>Esqueci minha senha\r\n\r\n                         </h1>\r\n                         <p>Insira seu email para receber mais detalhes de como redefinir sua senha.</p>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control value={email} onChange={event=> setEmail(event.target.value)} type=\"email\" placeholder=\"Digite seu email\" />\r\n                            </Form.Group>\r\n                            <Button onClick={event => Recuperar(event)} style={{marginTop : '18px'}}  className='button' variant=\"dark\" type=\"submit\"> Enviar </Button>\r\n\r\n                     </Form> \r\n                     </Jumbotron>\r\n\r\n                </Container>\r\n           \r\n            \r\n            <Rodape />\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default EsqueciaSenha;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport Login from './pages/login';\r\nimport Cadastro from './pages/cadastro';\r\nimport Home from './pages/home/index';\r\nimport DetalhesDaInstituicao from \"./pages/detalhes-da-instituicao/detalhes-da-instituicao\";\r\nimport PessoasDaInstituicao from \"./pages/pessoas-da-instituicao/pessoas-da-instituicao\";\r\nimport MinhasInstituicoes from \"./pages/minhas-instituicoes/minhas-instituicoes\";\r\nimport RedefinirSenha from './pages/redefinir-senha/redefinir-senha';\r\nimport EsqueciaSenha from './pages/esqueciasenha';\r\n\r\nimport { ToastProvider } from 'react-toast-notifications';\r\n\r\nconst RotaPrivadaLogado = ({component : Component, ...rest}) => (\r\n  <Route\r\n    {...rest}\r\n    render= {\r\n      props => \r\n      localStorage.getItem(\"token-carongo\") !== null ?\r\n        <Component {...props}/> :\r\n        <Redirect to={{pathname: \"/login\", state: {from: props.location}}}/>\r\n    }\r\n  />\r\n);\r\n\r\n\r\nconst RotaPrivadaNaoLogado = ({component : Component, ...rest}) => (\r\n  <Route\r\n    {...rest}\r\n    render= {\r\n      props => \r\n      localStorage.getItem(\"token-carongo\") === null ?\r\n        <Component {...props}/> :\r\n        <Redirect to={{pathname: \"/minhas-instituicoes\", state: {from: props.location}}}/>\r\n    }\r\n  />\r\n);\r\n\r\nconst routing = (\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <Switch>\r\n      <RotaPrivadaNaoLogado exact path=\"/\" component={Home} />\r\n      <RotaPrivadaNaoLogado path=\"/login\" component={Login} /> \r\n      <RotaPrivadaNaoLogado path=\"/cadastro\" component={Cadastro} />\r\n      <RotaPrivadaNaoLogado exact path=\"/esqueci-minha-senha\" component={EsqueciaSenha} /> \r\n      <RotaPrivadaNaoLogado path=\"/esqueci-minha-senha/redefinir-senha/:jwt\" component={RedefinirSenha} />\r\n\r\n      <RotaPrivadaLogado path=\"/minhas-instituicoes\" component={MinhasInstituicoes} /> \r\n      <RotaPrivadaLogado path=\"/detalhes-da-instituicao/:idInstituicao\" component={DetalhesDaInstituicao} />\r\n      <RotaPrivadaLogado path=\"/pessoas-da-instituicao/:idInstituicao\" component={PessoasDaInstituicao} />\r\n    </Switch>\r\n  </Router>\r\n)\r\n\r\nReactDOM.render(\r\n  <ToastProvider>\r\n    {routing}\r\n  </ToastProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.21fb3849.jpeg\";"],"sourceRoot":""}